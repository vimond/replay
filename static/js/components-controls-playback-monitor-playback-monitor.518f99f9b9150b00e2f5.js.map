{"version":3,"sources":["webpack:///./src/replay/components/common.js","webpack:///./src/replay/components/controls/PlaybackMonitor/PlaybackMonitor.js","webpack:///./src/replay/components/controls/PlaybackMonitor/PlaybackMonitor.mdx","webpack:///./src/replay/components/generic/Button/Button.js","webpack:///./src/replay/components/player/PlayerController/ControllerContext.js","webpack:///./src/replay/components/player/PlayerController/connectControl.js","webpack:///./src/replay/docs/mdx-helpers/SimpleTable.js","webpack:///./src/replay/version.js"],"names":["defaultClassNamePrefix","prefixClassNames","prefix","names","sanitizedPrefix","classNameArray","i","length","push","join","isDefined","item","hydrateClassNames","classes","selectClasses","classNames","classNamePrefix","selectedClasses","Array","isArray","filter","getBoundingEventCoordinates","evt","element","domRect","currentTarget","getBoundingClientRect","extractedEvent","touches","changedTouches","x","Math","max","min","pageX","left","width","y","pageY","top","height","getKeyboardShortcutBlocker","keysToBeBlocked","keyboardEvent","indexOf","key","preventDefault","stopPropagation","isDifferent","a","b","Date","getTime","Number","isNaN","isObject","obj","constructor","isShallowEqual","keysA","Object","keys","keysB","deepClone","clone","original","forEach","override","base","overrides","copy","extension","getOwnPropertyNames","formatTimeComponent","integer","separator","emptyIfZero","pad","formatTime","seconds","negativeMark","rounded","round","includedNegativeMark","Infinity","days","floor","daysInSeconds","hours","hoursAndDaysInSeconds","minutes","secs","formatClockTime","date","isValidDate","getHours","getMinutes","getSeconds","getIntervalRunner","method","intervalSeconds","intervalID","start","setInterval","stop","clearInterval","orderedPropertyNames","formatValue","val","toString","toISOString","toFixed","Error","parts","message","code","severity","map","JSON","stringify","replace","PropTableRow","React","props","super","this","state","currentValue","inspect","propertyName","nextProps","prevState","previousValue","render","prefixedClassNames","formattedCurrentValue","formattedPreviousValue","title","className","propName","connectedComponents","connectControl","getVisibleFromConfig","configuration","playbackMonitor","visibleAtStart","TableHeaderRow","headerRow","PlaybackMonitor","setState","isMonitorVisible","ctrlKey","altKey","componentDidMount","document","addEventListener","handleKeyDown","componentWillUnmount","removeEventListener","componentDidUpdate","prevProps","prevContext","label","closeButtonContent","content","onClick","handleCloseClick","replayVersion","concat","ConnectedPropRow","renderTableRows","displayName","MDXContent","Component","layout","components","name","parentName","of","rows","button","Button","handleClick","onKeyDown","onKeyUp","handleKeyUp","role","tabIndex","useDefaultClassNaming","ControllerContext","setProperties","videoStreamer","observe","unobserve","registerObservers","onChange","p","ControlledVideoStreamer","Consumer","Control","stateKeys","resolvedStateKeys","streamStateKeysForObservation","Observer","prop","currentState","initialState","update","passdownProps","ConnectedControl","tableStyles","padding","tableLayout","boxShadow","borderSpacing","borderColor","borderCollapse","borderStyle","borderRadius","overflowY","fontSize","color","display","theadStyles","background","textAlign","trStyles","orderSpacing","tdStyles","verticalAlign","tdItalicStyles","fontStyle","opacity","tdCodeStyles","fontFamily","whiteSpace","SimpleTable","keyBase","row","values","headers","style","header","value","j","formatContent","version","e"],"mappings":"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","file":"static/js/components-controls-playback-monitor-playback-monitor.b55cee2a.js","sourcesContent":["//@flow\n\ntype Classes = { [string]: ?string };\n\nexport type CommonGenericProps = {\n  classes?: ?Classes,\n  classNamePrefix?: string,\n  className?: string\n};\n\nexport type CommonProps = {\n  classNamePrefix?: string,\n  label?: string\n};\n\nexport type Id = string | number;\n\ntype Coordinates = { x: number, y: number, width: number, height: number };\n\nexport const defaultClassNamePrefix = 'replay-';\n\nexport function prefixClassNames(prefix: ?string, ...names: Array<?string>): string {\n  const sanitizedPrefix = prefix == null ? '' : prefix;\n  const classNameArray = [];\n  for (let i = 0; i < names.length; i++) {\n    // Early optimisation: For loop is more effective than map/filter...\n    if (names[i]) {\n      classNameArray.push(sanitizedPrefix + names[i]);\n    }\n  }\n  return classNameArray.join(' ');\n}\n\n/*export function buildClassNames(useDefaultClassNaming: ?boolean, prefix: ?string, ...names: Array<?string>): string {\n  return useDefaultClassNaming ? prefixClassNames(prefix, ...names) : names[0] || '';\n}*/\n\nconst isDefined = item => item;\n\nexport function hydrateClassNames({\n  classes,\n  selectClasses,\n  classNames,\n  classNamePrefix\n}: {\n  classes: ?Classes,\n  selectClasses: Classes => ?string | ?Array<?string>,\n  classNames?: Array<?string>,\n  classNamePrefix?: string\n}): ?string {\n  if (classes && selectClasses) {\n    const selectedClasses = selectClasses(classes);\n    if (Array.isArray(selectedClasses)) {\n      return selectedClasses.filter(isDefined).join(' ');\n    } else {\n      return selectedClasses;\n    }\n  } else if (classNames) {\n    return prefixClassNames(classNamePrefix, ...classNames);\n  }\n}\n\nexport function getBoundingEventCoordinates(evt: any, element?: HTMLElement): Coordinates {\n  // Difficult to code this with strict typing in a JS-optimal way. Sticking to any for the event.\n  const domRect = (element || evt.currentTarget).getBoundingClientRect();\n  let extractedEvent;\n  if (evt.touches && evt.touches.length > 0) {\n    extractedEvent = evt.touches[0];\n  } else if (evt.changedTouches && evt.changedTouches.length > 0) {\n    extractedEvent = evt.changedTouches[0];\n  } else {\n    extractedEvent = evt;\n  }\n  return {\n    x: Math.max(0, Math.min(extractedEvent.pageX - domRect.left, domRect.width)),\n    y: Math.max(0, Math.min(extractedEvent.pageY - domRect.top, domRect.height)),\n    width: domRect.width,\n    height: domRect.height\n  };\n}\n\nexport function getKeyboardShortcutBlocker(keysToBeBlocked: Array<string>): KeyboardEvent => void {\n  return (keyboardEvent: KeyboardEvent) => {\n    if (keysToBeBlocked.indexOf(keyboardEvent.key) >= 0) {\n      keyboardEvent.preventDefault();\n      keyboardEvent.stopPropagation();\n    }\n  };\n}\n\nexport const isDifferent = (a: any, b: any) => {\n  if (a === b) {\n    return false;\n  }\n  if (a instanceof Date && b instanceof Date && a.getTime() === b.getTime()) {\n    return false;\n  }\n  return !(Number.isNaN(a) && Number.isNaN(b));\n};\n\nexport const isObject = (obj: ?{}) => obj != null && obj.constructor === {}.constructor;\n\nexport const isShallowEqual = (a: any, b: any): boolean => {\n  if (a === b) {\n    return true;\n  } else if (isObject(a) && isObject(b)) {\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n    const differentACount = keysA.filter(key => isDifferent(a[key], b[key])).length;\n    if (differentACount > 0) {\n      return false;\n    }\n    return keysB.filter(key => isDifferent(b[key], a[key])).length === 0;\n  } else if (Array.isArray(a) && Array.isArray(b) && a.length === b.length) {\n    for (let i = a.length; i--; ) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  } else {\n    // No identical equality\n    return false;\n  }\n};\n\nexport function deepClone(obj: ?{}): {} {\n  if (obj == null) {\n    return {};\n  } else {\n    const clone = {};\n    const original = obj;\n    Object.keys(obj).forEach(key => {\n      if (isObject(original[key])) {\n        clone[key] = deepClone(original[key]);\n      } else {\n        clone[key] = original[key];\n      }\n    });\n    return clone;\n  }\n}\n\nexport function override(base: ?{}, overrides: ?{}): Object {\n  const copy = deepClone(base);\n  if (overrides) {\n    const extension: {} = overrides; // Should be unnecessary!\n    Object.getOwnPropertyNames((extension: {})).forEach(key => {\n      if (isObject(extension[key])) {\n        if (isObject(copy[key])) {\n          copy[key] = override(copy[key], extension[key]);\n        } else {\n          copy[key] = deepClone(extension[key]);\n        }\n      } else {\n        copy[key] = extension[key];\n      }\n    });\n  }\n  return copy;\n}\n\nexport const formatTimeComponent = (\n  integer: number,\n  separator: string = '',\n  emptyIfZero: boolean = false,\n  pad: boolean = true\n) => {\n  return emptyIfZero && integer === 0 ? '' : integer < 10 && pad ? `0${integer}${separator}` : `${integer}${separator}`;\n};\n\nexport const formatTime = (seconds: number, negativeMark: string = '-') => {\n  let rounded = Math.round(seconds);\n  let includedNegativeMark = '';\n  if (typeof seconds !== 'number' || isNaN(seconds) || seconds === Infinity) {\n    rounded = 0;\n  } else if (rounded < 0) {\n    rounded = -rounded;\n    includedNegativeMark = negativeMark;\n  }\n  const days = Math.floor(rounded / 86400);\n  const daysInSeconds = days * 86400;\n  const hours = Math.floor((rounded - daysInSeconds) / 3600);\n  const hoursAndDaysInSeconds = daysInSeconds + hours * 3600;\n  const minutes = Math.floor((rounded - hoursAndDaysInSeconds) / 60);\n  const secs = rounded - hoursAndDaysInSeconds - minutes * 60;\n  return (\n    includedNegativeMark +\n    formatTimeComponent(days, '.', true, false) +\n    formatTimeComponent(hours, ':', days === 0) +\n    formatTimeComponent(minutes, ':', false) +\n    formatTimeComponent(secs)\n  );\n};\n\nexport const formatClockTime = (date: ?Date) => {\n  const isValidDate = date instanceof Date && !isNaN(date.getTime());\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n  if (isValidDate && date != null) {\n    // Silly construct for flow null check.\n    hours = isValidDate ? date.getHours() : 0;\n    minutes = isValidDate ? date.getMinutes() : 0;\n    seconds = isValidDate ? date.getSeconds() : 0;\n  }\n  return (\n    formatTimeComponent(hours, ':', false) + formatTimeComponent(minutes, ':', false) + formatTimeComponent(seconds)\n  );\n};\n\nexport const getIntervalRunner = (method: () => void, intervalSeconds: number) => {\n  let intervalID: ?IntervalID = null;\n  return {\n    start: () => {\n      if (!intervalID) {\n        intervalID = setInterval(method, intervalSeconds * 1000);\n      }\n    },\n    stop: () => {\n      if (intervalID) {\n        clearInterval(intervalID);\n        intervalID = null;\n      }\n    }\n  };\n};\n","// @flow\n\nimport * as React from 'react';\nimport type { CommonProps } from '../../common';\nimport type { VideoStreamState } from '../../player/VideoStreamer/types';\nimport { defaultClassNamePrefix, isDifferent, prefixClassNames } from '../../common';\nimport Button from '../../generic/Button/Button';\nimport connectControl from '../../player/PlayerController/connectControl';\nimport type { InspectMethod } from '../../player/PlayerController/ControllerContext';\nimport replayVersion from '../../../version';\n\nexport type PlaybackMonitorConfiguration = {\n  visibleAtStart?: boolean\n};\n\ntype Props = CommonProps & {\n  /** Optional object containing the property playbackMonitor: { visibleAtStart: true } in order to display it immediately. */\n  configuration?: {\n    playbackMonitor?: PlaybackMonitorConfiguration\n  },\n  /** The content of the overlay's close button. */\n  closeButtonContent: ?React.Node\n};\n\ntype State = {\n  isMonitorVisible: boolean\n};\n\ntype PrefixedClassNames = {\n  propName: string,\n  currentValue: string,\n  previousValue: string,\n  headerRow: string\n};\n\ntype TableRowProps = VideoStreamState & {\n  propertyName: string,\n  inspect: InspectMethod,\n  prefixedClassNames: PrefixedClassNames\n};\n\ntype TableRowState = {\n  currentValue: any,\n  previousValue?: any\n};\n\nconst orderedPropertyNames = [\n  'playMode',\n  'playState',\n  'isPaused',\n  'isBuffering',\n  'isSeeking',\n  'position',\n  'duration',\n  'absolutePosition',\n  'absoluteStartPosition',\n  'isAtLiveEdge',\n  'isPipAvailable',\n  'isPipActive',\n  'isAirPlayAvailable',\n  'isAirPlayActive',\n  'bufferedAhead',\n  'bitrateFix',\n  'bitrateCap',\n  'currentBitrate',\n  'bitrates',\n  'currentTextTrack',\n  'textTracks',\n  'currentAudioTrack',\n  'audioTracks',\n  'volume',\n  'isMuted',\n  'error'\n];\n\nconst className = 'playback-monitor';\nconst tableClassName = 'playback-monitor-stream-state';\nconst headerRowClassName = 'playback-monitor-table-header';\nconst propNameClassName = 'playback-monitor-property-name';\nconst currentValueClassName = 'playback-monitor-current-value';\nconst previousValueClassName = 'playback-monitor-previous-value';\nconst closeButtonClassName = 'playback-monitor-close-button';\nconst headerClassName = 'playback-monitor-header';\nconst versionClassName = 'playback-monitor-version';\n\nconst closeButtonLabel = 'Close';\n\nconst formatValue = (val: any): string => {\n  if (val instanceof Date) {\n    if (isNaN(val.getTime())) {\n      return val.toString();\n    } else {\n      return val.toISOString();\n    }\n  } else if (typeof val === 'number') {\n    if (val % 1 !== 0) {\n      return val.toFixed(2);\n    } else {\n      return val;\n    }\n  } else if (typeof val === 'function') {\n    return 'function :-o';\n  } else if (val instanceof Error) {\n    const parts = [];\n    if (val.message) {\n      parts.push(`message: '${val.message}'`);\n    }\n    if (val.code) {\n      parts.push(`code: '${val.code}'`);\n    }\n    if (val.severity) {\n      parts.push(`severity: '${val.severity}'`);\n    }\n    return `{${parts.join(',')}}`;\n  } else if (Array.isArray(val)) {\n    return '[' + val.map(formatValue).join(',') + ']';\n  } else if (typeof val === 'boolean') {\n    return val.toString();\n  } else if (typeof val === 'string') {\n    return val;\n  } else if (val) {\n    return JSON.stringify(val)\n      .replace(/(\")(([A-Z]|[a-z]|[0-9])+)(\")(:)/g, '$2$5')\n      .replace(/(handlers|props|methods|constants):\\{(.*?)},/g, '');\n  } else {\n    return val;\n  }\n};\n\nexport class PropTableRow extends React.Component<TableRowProps, TableRowState> {\n  constructor(props: TableRowProps) {\n    super(props);\n    this.state = {\n      currentValue: props.inspect()[props.propertyName]\n    };\n  }\n\n  static getDerivedStateFromProps(nextProps: TableRowProps, prevState: TableRowState) {\n    if (nextProps.propertyName in nextProps && isDifferent(nextProps[nextProps.propertyName], prevState.currentValue)) {\n      return {\n        currentValue: nextProps[nextProps.propertyName],\n        previousValue: prevState.currentValue\n      };\n    } else {\n      return null;\n    }\n  }\n\n  render() {\n    const { prefixedClassNames, propertyName } = this.props;\n    const { currentValue, previousValue } = this.state;\n    const formattedCurrentValue = formatValue(currentValue);\n    const formattedPreviousValue = formatValue(previousValue);\n    return (\n      <tr>\n        <th title={propertyName} className={prefixedClassNames.propName}>\n          {propertyName}\n        </th>\n        <td title={formattedCurrentValue} className={prefixedClassNames.currentValue}>\n          {formattedCurrentValue}\n        </td>\n        <td title={formattedPreviousValue} className={prefixedClassNames.previousValue}>\n          {formattedPreviousValue}\n        </td>\n      </tr>\n    );\n  }\n}\n\nconst connectedComponents = {};\n\norderedPropertyNames.forEach(propertyName => {\n  connectedComponents[propertyName] = connectControl(PropTableRow, [propertyName]);\n});\n\nconst getVisibleFromConfig = (props: Props) => {\n  return !!(\n    props.configuration &&\n    props.configuration.playbackMonitor &&\n    props.configuration.playbackMonitor.visibleAtStart\n  );\n};\n\nconst renderTableRows = classNamePrefix => {\n  const prefixedClassNames = {\n    headerRow: prefixClassNames(classNamePrefix, headerRowClassName),\n    propName: prefixClassNames(classNamePrefix, propNameClassName),\n    currentValue: prefixClassNames(classNamePrefix, currentValueClassName),\n    previousValue: prefixClassNames(classNamePrefix, previousValueClassName)\n  };\n  return [<TableHeaderRow key=\"header-row\" prefixedClassNames={prefixedClassNames} />].concat(\n    orderedPropertyNames.map(propertyName => {\n      const ConnectedPropRow = connectedComponents[propertyName];\n      return (\n        <ConnectedPropRow\n          key={`prop-row-${propertyName}`}\n          prefixedClassNames={prefixedClassNames}\n          propertyName={propertyName}\n        />\n      );\n    })\n  );\n};\n\nconst TableHeaderRow = ({ prefixedClassNames }: { prefixedClassNames: PrefixedClassNames }) => (\n  <tr className={prefixedClassNames.headerRow}>\n    <th className={prefixedClassNames.propName}>Property name</th>\n    <th className={prefixedClassNames.currentValue}>Current value</th>\n    <th className={prefixedClassNames.previousValue}>Previous value</th>\n  </tr>\n);\n\nclass PlaybackMonitor extends React.Component<Props, State> {\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isMonitorVisible: getVisibleFromConfig(props)\n    };\n  }\n\n  handleCloseClick = () => this.setState({ isMonitorVisible: false });\n\n  handleKeyDown = (keyboardEvent: KeyboardEvent) => {\n    if (keyboardEvent.ctrlKey && keyboardEvent.altKey && keyboardEvent.code === 'KeyM') {\n      this.setState({ isMonitorVisible: !this.state.isMonitorVisible });\n    }\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyDown);\n  }\n\n  componentDidUpdate(prevProps: Props, prevState: State, prevContext: *): * {\n    const prevVisible = getVisibleFromConfig(prevProps);\n    if (!prevVisible && getVisibleFromConfig(this.props)) {\n      this.setState({ isMonitorVisible: true });\n    }\n  }\n\n  render() {\n    const { label, classNamePrefix, closeButtonContent } = this.props;\n    if (this.state.isMonitorVisible) {\n      return (\n        <div title={label} className={prefixClassNames(classNamePrefix, className)}>\n          <div className={prefixClassNames(classNamePrefix, headerClassName)}>\n            <Button\n              className={closeButtonClassName}\n              classNamePrefix={classNamePrefix}\n              content={closeButtonContent}\n              label={closeButtonLabel}\n              onClick={this.handleCloseClick}\n            />\n            <p className={prefixClassNames(classNamePrefix, versionClassName)}>Replay v{replayVersion}</p>\n          </div>\n          <table className={prefixClassNames(classNamePrefix, tableClassName)}>\n            <tbody>{renderTableRows(classNamePrefix)}</tbody>\n          </table>\n        </div>\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nPlaybackMonitor.displayName = 'PlaybackMonitor';\nexport default PlaybackMonitor;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { PropsTable } from 'docz';\nimport PlaybackMonitor from './PlaybackMonitor';\nimport SimpleTable from '../../../docs/mdx-helpers/SimpleTable';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"playbackmonitor-component\"}}>{`PlaybackMonitor component`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`An overlay displaying all current and previous video stream state properties. Can be used for debugging and monitoring.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"summary\"}}>{`Summary`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This is a convenience component not intended for end user cases. It is by itself a connected control.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The playback monitor can be displayed by pressing `}<MDXTag name=\"strong\" components={components} parentName=\"p\">{`Ctrl+Alt+M`}</MDXTag>{` in an actual rendering of the Replay player.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={PlaybackMonitor} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"class-names-for-dom-and-states\"}}>{`Class names for DOM and states`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Please read the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/custom-replay/skins-styles\"}}>{`general principles`}</MDXTag>{` for Replay class names and styling.`}</MDXTag>\n<SimpleTable rows={[{\n  'Element': 'div',\n  'Class name': 'playback-monitor',\n  'Generic class name': '',\n  'States': '',\n  'Parent': ''\n},{\n  'Element': 'table',\n  'Class name': 'playback-monitor-stream-state',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.playback-monitor'\n},{\n  'Element': 'tr',\n  'Class name': 'playback-monitor-table-header',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.playback-monitor-stream-state'\n},{\n  'Element': 'th',\n  'Class name': 'playback-monitor-property-name',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.playback-monitor-stream-state tr'\n},{\n  'Element': 'td',\n  'Class name': 'playback-monitor-current-value',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.playback-monitor-stream-state tr'\n},{\n  'Element': 'td',\n  'Class name': 'playback-monitor-previous-value',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.playback-monitor-stream-state tr'\n},{\n  'Element': 'div',\n  'Class name': 'playback-monitor-header',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.playback-monitor'\n},{\n  'Element': 'div',\n  'Class name': 'playback-monitor-close-button',\n  'Generic class name': 'button',\n  'States': '',\n  'Parent': '.playback-monitor-header'\n},{\n  'Element': 'div',\n  'Class name': '',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.playback-monitor-close-button'\n},{\n  'Element': 'p',\n  'Class name': 'playback-monitor-version',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.playback-monitor-header'\n}]}/>\n           </MDXTag>\n  }\n}\n  ","// @flow\nimport * as React from 'react';\nimport { type CommonGenericProps, getKeyboardShortcutBlocker, hydrateClassNames } from '../../common';\n\ntype Props = CommonGenericProps & {\n  label?: string,\n  content?: React.Node,\n  onClick?: () => void\n};\n\nconst baseClassName = 'button';\nconst selectClasses = classes => classes.button;\n\nclass Button extends React.Component<Props> {\n  static defaultProps = {\n    useDefaultClassNaming: true\n  };\n\n  handleClick = () => this.props.onClick && this.props.onClick();\n\n  handleKeyDown = getKeyboardShortcutBlocker(['Enter', ' ']);\n\n  handleKeyUp = (keyboardEvent: KeyboardEvent) => {\n    if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n      keyboardEvent.preventDefault();\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const { label, className, classNamePrefix, classes, content }: Props = this.props;\n    const classNames = hydrateClassNames({\n      classes,\n      selectClasses,\n      classNames: [baseClassName, className],\n      classNamePrefix\n    }); // buildClassNames(useDefaultClassNaming, classNamePrefix, className, baseClassName);\n    return (\n      <div\n        title={label}\n        onClick={this.handleClick}\n        onKeyDown={this.handleKeyDown}\n        onKeyUp={this.handleKeyUp}\n        className={classNames}\n        role=\"button\"\n        tabIndex={0}>\n        <div tabIndex={-1}>{content}</div>\n      </div>\n    );\n  }\n}\n\nexport default Button;\n","// @flow\nimport * as React from 'react';\nimport type { PlaybackProps, VideoStreamState, VideoStreamStateKeys } from '../VideoStreamer/types';\n\nexport type ObserveCallback = ({ [VideoStreamStateKeys]: any }) => void;\nexport type ObserveMethod = (VideoStreamStateKeys, ObserveCallback) => void;\nexport type UnobserveMethod = ObserveMethod;\nexport type InspectMethod = () => VideoStreamState;\nexport type SetPropertiesMethod = PlaybackProps => void;\n\nexport type StreamStateKeysForObservation = Array<VideoStreamStateKeys>;\nexport type ObservingControlStaticProps = {\n  streamStateKeysForObservation?: StreamStateKeysForObservation\n};\n\nexport type ControllerApi = {\n  setProperties: SetPropertiesMethod,\n  observe: ?ObserveMethod,\n  inspect: InspectMethod,\n  videoStreamer: ?React.Element<any>,\n  unobserve: ObserveMethod\n};\nconst initialContextValue: ControllerApi = {\n  setProperties: () => {},\n  videoStreamer: null,\n  inspect: () => ({}),\n  observe: null,\n  unobserve: () => {}\n};\nconst ControllerContext = React.createContext<ControllerApi>(initialContextValue);\n\nexport default ControllerContext;\n","// @flow\nimport * as React from 'react';\nimport ControllerContext from './ControllerContext';\nimport type { InspectMethod, ObserveMethod, UnobserveMethod, SetPropertiesMethod } from './ControllerContext';\nimport type { VideoStreamState, VideoStreamStateKeys } from '../VideoStreamer/types';\nimport type { CommonGenericProps } from '../../common';\n\ntype HandleChangeMethod = ({ [VideoStreamStateKeys]: any }) => void;\n\ntype PassdownProps = VideoStreamState & {\n  setProperties?: SetPropertiesMethod,\n  inspect?: InspectMethod\n};\n\ntype ObserverProps = {\n  observe: ObserveMethod,\n  unobserve: UnobserveMethod,\n  inspect: InspectMethod,\n  passdownProps: PassdownProps\n};\n\n/*\nconst getObserver = (callback: HandleChangeMethod) => (key: string, value: any) => {\n  callback({ [key]: value });\n};\n*/\nconst registerObservers = (observe: ObserveMethod, keys: Array<VideoStreamStateKeys>, onChange: HandleChangeMethod) =>\n  keys.forEach(p => observe(p, onChange));\n\nconst connectControl = <Props: {}>(\n  Control: React.ComponentType<Props>,\n  stateKeys?: Array<VideoStreamStateKeys>\n): React.ComponentType<$Diff<Props, PassdownProps>> => {\n  // $FlowFixMe What's the best practices for extending component classes with static properties?\n  const resolvedStateKeys = stateKeys || Control.streamStateKeysForObservation || [];\n  if (!Array.isArray(resolvedStateKeys)) {\n    // Good old runtime check.\n    throw new Error(\n      `The component ${Control.displayName ||\n        Control.name} cannot be connected to the player controller because no stream state property keys are specified to be observed.`\n    );\n  }\n\n  class Observer extends React.Component<ObserverProps, any> {\n    constructor(props) {\n      super(props);\n      const currentState = props.inspect();\n      const initialState = {};\n      if (currentState) {\n        resolvedStateKeys.forEach(key => (initialState[key] = currentState[key]));\n      }\n      this.state = initialState;\n    }\n\n    update = prop => this.setState(prop);\n\n    componentWillUnmount() {\n      registerObservers(this.props.unobserve, resolvedStateKeys, this.update);\n    }\n\n    componentDidMount() {\n      registerObservers(this.props.observe, resolvedStateKeys, this.update);\n      const currentState = this.props.inspect();\n      if (currentState) {\n        resolvedStateKeys.forEach(key => this.setState({ [key]: currentState[key] }));\n      }\n    }\n\n    render() {\n      return <Control {...{ ...this.props.passdownProps, ...this.state }} />;\n    }\n  }\n\n  const ConnectedControl = (props: $Diff<Props, PassdownProps>) => (\n    <ControllerContext.Consumer>\n      {({ observe, unobserve, setProperties, inspect }) => {\n        if (observe) {\n          return (\n            <Observer\n              observe={observe}\n              unobserve={unobserve}\n              inspect={inspect}\n              passdownProps={{ ...props, setProperties, inspect }}\n            />\n          );\n        } else {\n          return <Control {...{ ...props, setProperties, inspect }} />;\n        }\n      }}\n    </ControllerContext.Consumer>\n  );\n\n  if (Control.displayName) {\n    ConnectedControl.displayName = 'Connected' + Control.displayName;\n  } else if (process.env.NODE_ENV === 'development') {\n    ConnectedControl.controlWithoutDisplayName = Control.name + ' wrapped in ConnectedControl';\n  } else {\n    ConnectedControl.displayName = 'Connected' + Control.name;\n  }\n  return ConnectedControl;\n};\n\nexport const ControlledVideoStreamer: React.StatelessFunctionalComponent<CommonGenericProps> = props => (\n  <ControllerContext.Consumer>\n    {({ videoStreamer }) => (videoStreamer != null ? React.cloneElement(videoStreamer, props) : null)}\n  </ControllerContext.Consumer>\n);\n\nexport default connectControl;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  rows?: Array<{ [string]: string }>\n};\n\nconst tableStyles = {\n  padding: 0,\n  tableLayout: 'auto',\n  boxShadow: '0 0 0 1px #CED4DE',\n  borderSpacing: 0,\n  borderColor: 'gray',\n  borderCollapse: 'collapse',\n  borderStyle: 'hidden',\n  borderRadius: '4px',\n  overflowY: 'hidden',\n  fontSize: '14px',\n  color: '#13161F',\n  width: '100%',\n  display: 'table'\n};\n\nconst theadStyles = {\n  color: '#7D899C',\n  background: '#EEF1F5',\n  textAlign: 'left',\n  fontSize: '14px',\n  borderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst trStyles = {\n  orderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst tdStyles = {\n  padding: '20px',\n  verticalAlign: 'top'\n};\n\nconst tdItalicStyles = {\n  ...tdStyles,\n  fontStyle: 'italic',\n  opacity: 0.5\n};\n\nconst tdCodeStyles = {\n  ...tdStyles,\n  fontFamily: '\"Source Code Pro\",monospace',\n  whiteSpace: 'nowrap'\n};\n\nconst applyStyles = content => {\n  if (content === '') {\n    return tdItalicStyles;\n  } else {\n    return tdCodeStyles;\n  }\n};\n\nconst formatContent = content => {\n  if (content === '') {\n    return 'none';\n  } else {\n    return content;\n  }\n};\n\nconst SimpleTable = ({ rows }: Props) => {\n  const keyBase = rows ? rows.map(row => (Object.values(row): any).join('-')).join('-') : '';\n  if (rows && rows.length) {\n    const headers = Object.keys(rows[0]);\n    return (\n      <table style={tableStyles}>\n        <thead style={theadStyles}>\n          <tr style={trStyles}>\n            {headers.map(header => (\n              <th key={'header-' + header} style={tdStyles}>\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, i) => (\n            <tr key={keyBase + '-row-' + i} style={trStyles}>\n              {(Object.values(row): any).map((value, j) => (\n                <td key={keyBase + '-cell-' + i + '-' + j} style={applyStyles(value)}>\n                  {formatContent(value)}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n};\n\nexport default SimpleTable;\n","let version = '0.0.0';\ntry {\n  version = __VERSION__; // eslint-disable-line no-undef\n} catch (e) {}\nexport default version;\n"],"sourceRoot":""}