{"version":3,"sources":["webpack:///./src/replay/components/common.js","webpack:///./src/replay/components/controls/FullscreenButton/FullscreenButton.js","webpack:///./src/replay/components/controls/FullscreenButton/FullscreenButton.mdx","webpack:///./src/replay/components/generic/ToggleButton/ToggleButton.js","webpack:///./src/replay/components/player/containment-helpers/ponyfills/crossBrowserFullscreen.js","webpack:///./src/replay/components/player/containment-helpers/Fullscreen.js","webpack:///./src/replay/docs/mdx-helpers/ShowCase.js","webpack:///./src/replay/docs/mdx-helpers/SimpleTable.js"],"names":["defaultClassNamePrefix","prefixClassNames","prefix","names","sanitizedPrefix","classNameArray","i","length","push","join","isDefined","item","hydrateClassNames","classes","selectClasses","classNames","classNamePrefix","selectedClasses","Array","isArray","filter","getBoundingEventCoordinates","evt","element","domRect","currentTarget","getBoundingClientRect","extractedEvent","touches","changedTouches","x","Math","max","min","pageX","left","width","y","pageY","top","height","getKeyboardShortcutBlocker","keysToBeBlocked","keyboardEvent","indexOf","key","preventDefault","stopPropagation","isDifferent","a","b","Date","getTime","Number","isNaN","isObject","obj","constructor","isShallowEqual","keysA","Object","keys","keysB","deepClone","clone","original","forEach","override","base","overrides","copy","extension","getOwnPropertyNames","formatTimeComponent","integer","separator","emptyIfZero","pad","formatTime","seconds","negativeMark","rounded","round","includedNegativeMark","Infinity","days","floor","daysInSeconds","hours","hoursAndDaysInSeconds","minutes","secs","formatClockTime","date","isValidDate","getHours","getMinutes","getSeconds","getIntervalRunner","method","intervalSeconds","intervalID","start","setInterval","stop","clearInterval","FullscreenButton","React","value","this","props","setProperties","isFullscreen","render","fullscreenContent","normalContent","label","isOn","className","onToggle","handleToggle","toggledOnContent","toggledOffContent","displayName","MDXContent","Component","super","layout","components","name","parentName","__codesandbox","__position","__code","__scope","Fullscreen","ShowCase","Maximize","Minimize","SimpleTable","onRef","ref","of","rows","selectOffClasses","toggleButtonOff","toggleButton","selectOnClasses","toggleButtonOn","ToggleButton","handleClick","toggleClassName","content","role","aria-pressed","title","onClick","onKeyUp","handleKeyUp","onKeyDown","handleKeyDown","tabIndex","useDefaultClassNaming","getFullscreenElement","document","fullScreenElement","fullscreenElement","webkitFullscreenElement","webkitFullScreenElement","mozFullScreenElement","msFullscreenElement","fullscreenTarget","setState","requestFullscreen","mozRequestFullScreen","msRequestFullscreen","webkitRequestFullscreen","Element","ALLOW_KEYBOARD_INPUT","webkitRequestFullScreen","navigator","userAgent","match","getElementsByTagName","webkitEnterFullscreen","exitFullscreen","mozCancelFullScreen","webkitExitFullscreen","webkitExitFullScreen","msExitFullscreen","enterFullscreen","state","unsubscribe","handler","fullscreenEventNames","eventName","addEventListener","removeEventListener","notifyFullscreenChange","onFullscreenChange","componentWillUnmount","convertPropsToState","style","justifyContent","tableStyles","padding","tableLayout","boxShadow","borderSpacing","borderColor","borderCollapse","borderStyle","borderRadius","overflowY","fontSize","color","display","theadStyles","background","textAlign","trStyles","orderSpacing","tdStyles","verticalAlign","tdItalicStyles","fontStyle","opacity","tdCodeStyles","fontFamily","whiteSpace","keyBase","map","row","values","headers","header","j","formatContent"],"mappings":"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","file":"static/js/components-controls-fullscreen-button-fullscreen-button.0de021ef.js","sourcesContent":["//@flow\n\ntype Classes = { [string]: ?string };\n\nexport type CommonGenericProps = {\n  classes?: ?Classes,\n  classNamePrefix?: string,\n  className?: string\n};\n\nexport type CommonProps = {\n  classNamePrefix?: string,\n  label?: string\n};\n\nexport type Id = string | number;\n\ntype Coordinates = { x: number, y: number, width: number, height: number };\n\nexport const defaultClassNamePrefix = 'replay-';\n\nexport function prefixClassNames(prefix: ?string, ...names: Array<?string>): string {\n  const sanitizedPrefix = prefix == null ? '' : prefix;\n  const classNameArray = [];\n  for (let i = 0; i < names.length; i++) {\n    // Early optimisation: For loop is more effective than map/filter...\n    if (names[i]) {\n      classNameArray.push(sanitizedPrefix + names[i]);\n    }\n  }\n  return classNameArray.join(' ');\n}\n\n/*export function buildClassNames(useDefaultClassNaming: ?boolean, prefix: ?string, ...names: Array<?string>): string {\n  return useDefaultClassNaming ? prefixClassNames(prefix, ...names) : names[0] || '';\n}*/\n\nconst isDefined = item => item;\n\nexport function hydrateClassNames({\n  classes,\n  selectClasses,\n  classNames,\n  classNamePrefix\n}: {\n  classes: ?Classes,\n  selectClasses: Classes => ?string | ?Array<?string>,\n  classNames?: Array<?string>,\n  classNamePrefix?: string\n}): ?string {\n  if (classes && selectClasses) {\n    const selectedClasses = selectClasses(classes);\n    if (Array.isArray(selectedClasses)) {\n      return selectedClasses.filter(isDefined).join(' ');\n    } else {\n      return selectedClasses;\n    }\n  } else if (classNames) {\n    return prefixClassNames(classNamePrefix, ...classNames);\n  }\n}\n\nexport function getBoundingEventCoordinates(evt: any, element?: HTMLElement): Coordinates {\n  // Difficult to code this with strict typing in a JS-optimal way. Sticking to any for the event.\n  const domRect = (element || evt.currentTarget).getBoundingClientRect();\n  let extractedEvent;\n  if (evt.touches && evt.touches.length > 0) {\n    extractedEvent = evt.touches[0];\n  } else if (evt.changedTouches && evt.changedTouches.length > 0) {\n    extractedEvent = evt.changedTouches[0];\n  } else {\n    extractedEvent = evt;\n  }\n  return {\n    x: Math.max(0, Math.min(extractedEvent.pageX - domRect.left, domRect.width)),\n    y: Math.max(0, Math.min(extractedEvent.pageY - domRect.top, domRect.height)),\n    width: domRect.width,\n    height: domRect.height\n  };\n}\n\nexport function getKeyboardShortcutBlocker(keysToBeBlocked: Array<string>): KeyboardEvent => void {\n  return (keyboardEvent: KeyboardEvent) => {\n    if (keysToBeBlocked.indexOf(keyboardEvent.key) >= 0) {\n      keyboardEvent.preventDefault();\n      keyboardEvent.stopPropagation();\n    }\n  };\n}\n\nexport const isDifferent = (a: any, b: any) => {\n  if (a === b) {\n    return false;\n  }\n  if (a instanceof Date && b instanceof Date && a.getTime() === b.getTime()) {\n    return false;\n  }\n  return !(Number.isNaN(a) && Number.isNaN(b));\n};\n\nexport const isObject = (obj: ?{}) => obj != null && obj.constructor === {}.constructor;\n\nexport const isShallowEqual = (a: any, b: any): boolean => {\n  if (a === b) {\n    return true;\n  } else if (isObject(a) && isObject(b)) {\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n    const differentACount = keysA.filter(key => isDifferent(a[key], b[key])).length;\n    if (differentACount > 0) {\n      return false;\n    }\n    return keysB.filter(key => isDifferent(b[key], a[key])).length === 0;\n  } else if (Array.isArray(a) && Array.isArray(b) && a.length === b.length) {\n    for (let i = a.length; i--; ) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  } else {\n    // No identical equality\n    return false;\n  }\n};\n\nexport function deepClone(obj: ?{}): {} {\n  if (obj == null) {\n    return {};\n  } else {\n    const clone = {};\n    const original = obj;\n    Object.keys(obj).forEach(key => {\n      if (isObject(original[key])) {\n        clone[key] = deepClone(original[key]);\n      } else {\n        clone[key] = original[key];\n      }\n    });\n    return clone;\n  }\n}\n\nexport function override(base: ?{}, overrides: ?{}): Object {\n  const copy = deepClone(base);\n  if (overrides) {\n    const extension: {} = overrides; // Should be unnecessary!\n    Object.getOwnPropertyNames((extension: {})).forEach(key => {\n      if (isObject(extension[key])) {\n        if (isObject(copy[key])) {\n          copy[key] = override(copy[key], extension[key]);\n        } else {\n          copy[key] = deepClone(extension[key]);\n        }\n      } else {\n        copy[key] = extension[key];\n      }\n    });\n  }\n  return copy;\n}\n\nexport const formatTimeComponent = (\n  integer: number,\n  separator: string = '',\n  emptyIfZero: boolean = false,\n  pad: boolean = true\n) => {\n  return emptyIfZero && integer === 0 ? '' : integer < 10 && pad ? `0${integer}${separator}` : `${integer}${separator}`;\n};\n\nexport const formatTime = (seconds: number, negativeMark: string = '-') => {\n  let rounded = Math.round(seconds);\n  let includedNegativeMark = '';\n  if (typeof seconds !== 'number' || isNaN(seconds) || seconds === Infinity) {\n    rounded = 0;\n  } else if (rounded < 0) {\n    rounded = -rounded;\n    includedNegativeMark = negativeMark;\n  }\n  const days = Math.floor(rounded / 86400);\n  const daysInSeconds = days * 86400;\n  const hours = Math.floor((rounded - daysInSeconds) / 3600);\n  const hoursAndDaysInSeconds = daysInSeconds + hours * 3600;\n  const minutes = Math.floor((rounded - hoursAndDaysInSeconds) / 60);\n  const secs = rounded - hoursAndDaysInSeconds - minutes * 60;\n  return (\n    includedNegativeMark +\n    formatTimeComponent(days, '.', true, false) +\n    formatTimeComponent(hours, ':', days === 0) +\n    formatTimeComponent(minutes, ':', false) +\n    formatTimeComponent(secs)\n  );\n};\n\nexport const formatClockTime = (date: ?Date) => {\n  const isValidDate = date instanceof Date && !isNaN(date.getTime());\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n  if (isValidDate && date != null) {\n    // Silly construct for flow null check.\n    hours = isValidDate ? date.getHours() : 0;\n    minutes = isValidDate ? date.getMinutes() : 0;\n    seconds = isValidDate ? date.getSeconds() : 0;\n  }\n  return (\n    formatTimeComponent(hours, ':', false) + formatTimeComponent(minutes, ':', false) + formatTimeComponent(seconds)\n  );\n};\n\nexport const getIntervalRunner = (method: () => void, intervalSeconds: number) => {\n  let intervalID: ?IntervalID = null;\n  return {\n    start: () => {\n      if (!intervalID) {\n        intervalID = setInterval(method, intervalSeconds * 1000);\n      }\n    },\n    stop: () => {\n      if (intervalID) {\n        clearInterval(intervalID);\n        intervalID = null;\n      }\n    }\n  };\n};\n","// @flow\nimport * as React from 'react';\nimport ToggleButton from '../../generic/ToggleButton/ToggleButton';\nimport { defaultClassNamePrefix } from '../../common';\nimport type { CommonProps } from '../../common';\n\ntype Props = CommonProps & {\n  /** The current fullscreen state, as reported in the render method of the Fullscreen helper component. */\n  isFullscreen?: boolean,\n  /** Intended for the setProperties method passed in the render method of the Fullscreen helper component. When the button is clicked, this callback is invoked with an object having an isFullscreen property with the opposite boolean value as the isFullscreen prop. */\n  setProperties?: ({ isFullscreen: boolean }) => void,\n  /** The button content to be displayed while isFullscreen is true. */\n  fullscreenContent: React.Node,\n  /** The button content to be displayed while isFullscreen is false. */\n  normalContent: React.Node\n};\n\nconst className = 'fullscreen-button';\n\nclass FullscreenButton extends React.Component<Props> {\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix\n  };\n\n  handleToggle = (value: boolean) => {\n    if (this.props.setProperties) {\n      this.props.setProperties({ isFullscreen: value });\n    }\n  };\n\n  render() {\n    const { isFullscreen, fullscreenContent, normalContent, label, classNamePrefix } = this.props;\n    return (\n      <ToggleButton\n        classNamePrefix={classNamePrefix}\n        isOn={isFullscreen}\n        className={className}\n        label={label}\n        onToggle={this.handleToggle}\n        toggledOnContent={fullscreenContent}\n        toggledOffContent={normalContent}\n      />\n    );\n  }\n}\n\nFullscreenButton.displayName = 'FullscreenButton';\nexport default FullscreenButton;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport FullscreenButton from './FullscreenButton';\nimport Fullscreen from '../../player/containment-helpers/Fullscreen';\nimport ShowCase from '../../../docs/mdx-helpers/ShowCase';\nimport { Maximize, Minimize } from 'react-feather';\nimport SimpleTable from '../../../docs/mdx-helpers/SimpleTable';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"fullscreenbutton\"}}>{`FullscreenButton`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Control bar button for toggling fullscreen mode.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"summary\"}}>{`Summary`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The current fullscreen state is specified in the prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isFullscreen`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When clicking the button, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties({ isFullscreen: value })`}</MDXTag>{` will be called with value being the opposite of the prop `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isFullscreen`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={``} __position={0} __code={'<Fullscreen\\n  render={({ isFullscreen, setProperties, onRef }) => (\\n    <div ref={onRef}>\\n      <ShowCase\\n        render={() => (\\n          <FullscreenButton\\n            isFullscreen={isFullscreen}\\n            fullscreenContent={<Minimize />}\\n            normalContent={<Maximize />}\\n            setProperties={setProperties}\\n          />\\n        )}\\n      />\\n    </div>\\n  )}\\n/>'} __scope={{props: this ? this.props : props,FullscreenButton,Fullscreen,ShowCase,Maximize,Minimize,SimpleTable}}>\n  <Fullscreen render={({ isFullscreen, setProperties, onRef }) => (\n    <div ref={onRef}>\n      <ShowCase render={() => <FullscreenButton isFullscreen={isFullscreen} fullscreenContent={<Minimize/>} normalContent={<Maximize/>} setProperties={setProperties} />}/>\n    </div>\n  )}/>  \n</Playground>\n<MDXTag name=\"p\" components={components}>{`This example shows real fullscreen toggling together with the containment helper component `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Fullscreen/>`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={FullscreenButton} />\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"component-dom-with-class-names\"}}>{`Component DOM with class names`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Please read the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/custom-replay/skins-styles\"}}>{`general principles`}</MDXTag>{` for Replay class names and styling.`}</MDXTag>\n<SimpleTable rows={[{ \n  'Element': 'div',\n  'Class name': 'fullscreen-button',\n  'Generic class name': 'toggle-button',\n  'States': 'toggled-off, toggled-on',\n  'Parent': ''\n},{\n  'Element': 'div',\n  'Class name': '',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.fullscreen-button'\n}]}/>\n           </MDXTag>\n  }\n}\n  ","// @flow\nimport * as React from 'react';\nimport { type CommonGenericProps, getKeyboardShortcutBlocker, hydrateClassNames } from '../../common';\n\ntype Props = CommonGenericProps & {\n  /** Set to true if the button should be in the toggled on mode. */\n  isOn?: boolean,\n  /** The label will appear in the title attribute of the root DOM element of the toggle button. */\n  label?: string,\n  /** The button content to be displayed when the button is toggled off. */\n  toggledOffContent?: React.Node,\n  /** The button content to be displayed when the button is toggled on. */\n  toggledOnContent?: React.Node,\n  /** A callback method that will be invoked when the button is clicked and the value toggled. If the button has been toggled on, true is passed to the callback. */\n  onToggle?: boolean => void,\n  /** A callback method invoked with the rendered button element, for focus purposes. */\n  onRef?: (?HTMLElement) => void\n};\n\nconst baseClassName = 'toggle-button';\nconst offClassName = 'toggled-off';\nconst onClassName = 'toggled-on';\n\nconst selectOffClasses = classes => classes.toggleButtonOff || classes.toggleButton;\nconst selectOnClasses = classes => classes.toggleButtonOn || classes.toggleButton;\n\n/**\n * Renders a button with two states - toggled on and off. When clicked, it reports back the opposite state.\n */\nclass ToggleButton extends React.Component<Props> {\n  static defaultProps = {\n    useDefaultClassNaming: true\n  };\n\n  handleClick = () => this.props.onToggle && this.props.onToggle(!this.props.isOn);\n\n  handleKeyDown = getKeyboardShortcutBlocker(['Enter', ' ']);\n\n  handleKeyUp = (keyboardEvent: KeyboardEvent) => {\n    if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n      keyboardEvent.preventDefault();\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const { isOn, label, className, classNamePrefix, toggledOnContent, toggledOffContent, onRef, classes } = this.props;\n    const toggleClassName = isOn ? onClassName : offClassName;\n    const classNames = hydrateClassNames({\n      classes,\n      selectClasses: isOn ? selectOnClasses : selectOffClasses,\n      classNamePrefix,\n      classNames: [className, baseClassName, toggleClassName]\n    });\n    const content = isOn ? toggledOnContent : toggledOffContent;\n    return (\n      <div\n        role=\"button\"\n        aria-pressed={isOn}\n        title={label}\n        onClick={this.handleClick}\n        onKeyUp={this.handleKeyUp}\n        onKeyDown={this.handleKeyDown}\n        ref={onRef}\n        className={classNames}\n        tabIndex={0}>\n        <div tabIndex={-1}>{content}</div>\n      </div>\n    );\n  }\n}\n\nexport default ToggleButton;\n","export function getFullscreenElement() {\n  // Ridiculous camel casing confusion ruling the Interwebs.\n  return (\n    document.fullScreenElement ||\n    document.fullscreenElement ||\n    document.webkitFullscreenElement ||\n    document.webkitFullScreenElement ||\n    document.mozFullScreenElement ||\n    document.msFullscreenElement\n  );\n}\n\nexport function enterFullscreen(element) {\n  if (element.requestFullscreen) {\n    element.requestFullscreen();\n    return true;\n  } else if (element.mozRequestFullScreen) {\n    element.mozRequestFullScreen();\n    return true;\n  } else if (element.msRequestFullscreen) {\n    element.msRequestFullscreen();\n    return true;\n  } else if (element.webkitRequestFullscreen) {\n    element.webkitRequestFullscreen(Element.ALLOW_KEYBOARD_INPUT);\n    return true;\n  } else if (element.webkitRequestFullScreen) {\n    element.webkitRequestFullScreen(); // ALLOW_KEY_BOARD_INPUT makes this function not work in older Safari versions.\n    return true;\n  } else {\n    // Try native fullscreen for video element in Safari on iPhone and older iOS in general.\n    if (navigator.userAgent.match(/(iPad|iPhone|iPod)/i)) {\n      element = element.getElementsByTagName('video')[0];\n      if (element) {\n        element.webkitEnterFullscreen();\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nexport function exitFullscreen() {\n  if (document.exitFullscreen) {\n    document.exitFullscreen();\n  } else if (document.mozCancelFullScreen) {\n    document.mozCancelFullScreen();\n  } else if (document.webkitExitFullscreen) {\n    document.webkitExitFullscreen();\n  } else if (document.webkitExitFullScreen) {\n    document.webkitExitFullScreen();\n  } else if (document.msExitFullscreen) {\n    document.msExitFullscreen();\n  }\n}\n\nexport function notifyFullscreenChange(handler) {\n  const fullscreenEventNames = [\n    'fullscreenchange',\n    'mozfullscreenchange',\n    'webkitfullscreenchange',\n    'MSFullscreenChange'\n  ];\n\n  fullscreenEventNames.forEach(function(eventName) {\n    document.addEventListener(eventName, handler);\n  });\n\n  return function() {\n    fullscreenEventNames.forEach(function(eventName) {\n      document.removeEventListener(eventName, handler);\n    });\n  };\n}\n","// @flow\n\nimport * as React from 'react';\nimport {\n  enterFullscreen,\n  exitFullscreen,\n  getFullscreenElement,\n  notifyFullscreenChange\n} from './ponyfills/crossBrowserFullscreen';\n\nexport type FullscreenState = {\n  isFullscreen: boolean,\n  setProperties: ({ isFullscreen: boolean }) => void,\n  enterFullscreen: () => void,\n  exitFullscreen: () => void\n};\n\ntype FullscreenRenderParameters = FullscreenState & {\n  onRef: (?HTMLElement) => void\n};\n\ntype Props = {\n  render: FullscreenRenderParameters => React.Node\n};\n\ntype State = {\n  isFullscreen: boolean\n};\n\nclass Fullscreen extends React.Component<Props, State> {\n  constructor(props: Props) {\n    super(props);\n    this.state = { isFullscreen: false };\n    this.unsubscribe = notifyFullscreenChange(this.onFullscreenChange);\n  }\n\n  fullscreenTarget: ?HTMLElement;\n  unsubscribe: () => void;\n\n  componentWillUnmount() {\n    this.unsubscribe && this.unsubscribe();\n  }\n\n  onRef = (element: ?HTMLElement) => {\n    this.fullscreenTarget = element;\n    this.setState({ isFullscreen: getFullscreenElement() === element });\n  };\n\n  onFullscreenChange = () => {\n    const fullscreenElement = getFullscreenElement();\n    this.setState({ isFullscreen: !!(fullscreenElement && fullscreenElement === this.fullscreenTarget) });\n  };\n\n  enterFullscreen = () => {\n    if (this.fullscreenTarget) {\n      enterFullscreen(this.fullscreenTarget);\n    }\n  };\n\n  exitFullscreen = () => {\n    if (this.fullscreenTarget) {\n      exitFullscreen(this.fullscreenTarget);\n    }\n  };\n\n  setProperties = ({ isFullscreen }: { isFullscreen: boolean } = {}) => {\n    if (isFullscreen) {\n      this.enterFullscreen();\n    } else {\n      this.exitFullscreen();\n    }\n  };\n\n  render() {\n    const { render } = this.props;\n    const { isFullscreen } = this.state;\n    const { enterFullscreen, exitFullscreen, onRef, setProperties } = this;\n    return render({ isFullscreen, enterFullscreen, exitFullscreen, setProperties, onRef });\n  }\n}\nexport default Fullscreen;\n","// @flow\nimport * as React from 'react';\nimport type { PlaybackProps, VideoStreamState } from '../../components/player/VideoStreamer/types';\nimport '../../replay-default.css';\n\ntype Props = {\n  render: (VideoStreamState & { setProperties: PlaybackProps => void }) => React.Node,\n  height?: string\n};\n\nconst convertPropsToState = (props: PlaybackProps): VideoStreamState => {\n  const state: VideoStreamState = {};\n  Object.keys(props).forEach(key => {\n    // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n    let value = props[key];\n    switch (key) {\n      case 'selectedAudioTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentAudioTrack'] = value;\n        break;\n      case 'selectedTextTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentTextTrack'] = value;\n        break;\n      default:\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state[key] = value;\n    }\n  });\n  return state;\n};\n\nclass ShowCase extends React.Component<Props, VideoStreamState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState. Should work well for most of the props.\n  setProperties = (props: PlaybackProps) => this.setState(convertPropsToState(props));\n\n  render() {\n    const { setProperties, state } = this;\n    const { render, height } = this.props;\n    const style = height ? { width: '100%', height } : { width: '100%' };\n    return (\n      <div>\n        <div style={style} />\n        <div className=\"replay-controls-bar\" style={{ justifyContent: 'center' }}>\n          {render({ ...state, setProperties })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default ShowCase;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  rows?: Array<{ [string]: string }>\n};\n\nconst tableStyles = {\n  padding: 0,\n  tableLayout: 'auto',\n  boxShadow: '0 0 0 1px #CED4DE',\n  borderSpacing: 0,\n  borderColor: 'gray',\n  borderCollapse: 'collapse',\n  borderStyle: 'hidden',\n  borderRadius: '4px',\n  overflowY: 'hidden',\n  fontSize: '14px',\n  color: '#13161F',\n  width: '100%',\n  display: 'table'\n};\n\nconst theadStyles = {\n  color: '#7D899C',\n  background: '#EEF1F5',\n  textAlign: 'left',\n  fontSize: '14px',\n  borderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst trStyles = {\n  orderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst tdStyles = {\n  padding: '20px',\n  verticalAlign: 'top'\n};\n\nconst tdItalicStyles = {\n  ...tdStyles,\n  fontStyle: 'italic',\n  opacity: 0.5\n};\n\nconst tdCodeStyles = {\n  ...tdStyles,\n  fontFamily: '\"Source Code Pro\",monospace',\n  whiteSpace: 'nowrap'\n};\n\nconst applyStyles = content => {\n  if (content === '') {\n    return tdItalicStyles;\n  } else {\n    return tdCodeStyles;\n  }\n};\n\nconst formatContent = content => {\n  if (content === '') {\n    return 'none';\n  } else {\n    return content;\n  }\n};\n\nconst SimpleTable = ({ rows }: Props) => {\n  const keyBase = rows ? rows.map(row => (Object.values(row): any).join('-')).join('-') : '';\n  if (rows && rows.length) {\n    const headers = Object.keys(rows[0]);\n    return (\n      <table style={tableStyles}>\n        <thead style={theadStyles}>\n          <tr style={trStyles}>\n            {headers.map(header => (\n              <th key={'header-' + header} style={tdStyles}>\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, i) => (\n            <tr key={keyBase + '-row-' + i} style={trStyles}>\n              {(Object.values(row): any).map((value, j) => (\n                <td key={keyBase + '-cell-' + i + '-' + j} style={applyStyles(value)}>\n                  {formatContent(value)}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n};\n\nexport default SimpleTable;\n"],"sourceRoot":""}