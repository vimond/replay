{"version":3,"sources":["webpack:///./src/replay/components/controls/TimelineInformation/TimelineInformation.mdx","webpack:///./src/replay/docs/mdx-helpers/ShowCase.js","webpack:///./src/replay/docs/mdx-helpers/SimpleTable.js","webpack:///./src/replay/docs/props-footnote.md"],"names":["MDXContent","React","Component","constructor","props","super","this","layout","render","components","name","parentName","__codesandbox","__position","__code","__scope","TimelineInformation","Timeline","ShowCase","SimpleTable","Footnote","height","setProperties","position","duration","playMode","of","rows","setState","state","Object","keys","forEach","key","value","convertPropsToState","style","width","className","justifyContent","tableStyles","padding","tableLayout","boxShadow","borderSpacing","borderColor","borderCollapse","borderStyle","borderRadius","overflowY","fontSize","color","display","theadStyles","background","textAlign","trStyles","orderSpacing","tdStyles","verticalAlign","tdItalicStyles","fontStyle","opacity","tdCodeStyles","fontFamily","whiteSpace","keyBase","map","row","values","join","length","headers","header","i","j","content","formatContent"],"mappings":"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","file":"static/js/components-controls-timeline-information-timeline-information.2953b5d7.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport TimelineInformation from './TimelineInformation';\nimport Timeline from '../Timeline/Timeline';\nimport ShowCase from '../../../docs/mdx-helpers/ShowCase';\nimport SimpleTable from '../../../docs/mdx-helpers/SimpleTable';\nimport Footnote from '../../../docs/props-footnote.md';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"timelineinformation-component\"}}>{`TimelineInformation component`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Position preview tooltip for timeline. When the mouse pointer is over the timeline, displays the corresponding stream position or time-of-day clock time for the pointer position.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"summary\"}}>{`Summary`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This component is used as a child to the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Timeline/>`}</MDXTag>{` component. It gets a `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`previewValue`}</MDXTag>{` prop set by the parent Timeline, containing a relative position between 0 and the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`duration`}</MDXTag>{` prop value. The parent control is responsible for tracking mouse positions, and to report the target seek position while dragging. Like `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<TimeDisplay/>`}</MDXTag>{`, the tooltip presents a clock time preview in the tooltip for live streams. For this, it needs the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`absoluteStartPosition`}</MDXTag>{` of the stream to be specified.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The tooltip only displays if at least one of the props `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isPointerInside`}</MDXTag>{` or `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`isDragging`}</MDXTag>{` is set to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`true`}</MDXTag>{` by the parent Timeline.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={0} __code={'<ShowCase\\n  height=\\\"20px\\\"\\n  render={({ setProperties, position }) => {\\n    const duration = 333\\n    return (\\n      <Timeline\\n        position={position}\\n        duration={duration}\\n        setProperties={setProperties}\\n      >\\n        <TimelineInformation playMode=\\\"ondemand\\\" duration={duration} />\\n      </Timeline>\\n    )\\n  }}\\n/>'} __scope={{props: this ? this.props : props,TimelineInformation,Timeline,ShowCase,SimpleTable,Footnote}}>\n  <ShowCase height=\"20px\" render={({ setProperties, position }) => {\n    const duration = 333;\n    return (\n      <Timeline position={position} duration={duration} setProperties={setProperties}>\n        <TimelineInformation playMode=\"ondemand\" duration={duration} />\n      </Timeline>\n    );  \n  }}/>\n</Playground>\n<MDXTag name=\"p\" components={components}>{`The component is here shown within a timeline.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={TimelineInformation} />\n<Footnote/>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"component-dom-with-class-names\"}}>{`Component DOM with class names`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Please read the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/custom-replay/skins-styles\"}}>{`general principles`}</MDXTag>{` for Replay class names and styling.`}</MDXTag>\n<SimpleTable rows={[{ \n  'Element': 'div',\n  'Class name': 'timeline-information',\n  'Generic class name': '',\n  'States': '',\n  'Parent': ''\n},{\n  'Element': 'div',\n  'Class name': 'timeline-tooltip',\n  'Generic class name': '',\n  'States': 'timeline-tooltip-visible',\n  'Parent': '.timeline-information'\n}]}/>\n           </MDXTag>\n  }\n}\n  ","// @flow\nimport * as React from 'react';\nimport type { PlaybackProps, VideoStreamState } from '../../components/player/VideoStreamer/types';\nimport '../../replay-default.css';\n\ntype Props = {\n  render: (VideoStreamState & { setProperties: PlaybackProps => void }) => React.Node,\n  height?: string\n};\n\nconst convertPropsToState = (props: PlaybackProps): VideoStreamState => {\n  const state: VideoStreamState = {};\n  Object.keys(props).forEach(key => {\n    // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n    let value = props[key];\n    switch (key) {\n      case 'selectedAudioTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentAudioTrack'] = value;\n        break;\n      case 'selectedTextTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentTextTrack'] = value;\n        break;\n      default:\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state[key] = value;\n    }\n  });\n  return state;\n};\n\nclass ShowCase extends React.Component<Props, VideoStreamState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState. Should work well for most of the props.\n  setProperties = (props: PlaybackProps) => this.setState(convertPropsToState(props));\n\n  render() {\n    const { setProperties, state } = this;\n    const { render, height } = this.props;\n    const style = height ? { width: '100%', height } : { width: '100%' };\n    return (\n      <div>\n        <div style={style} />\n        <div className=\"replay-controls-bar\" style={{ justifyContent: 'center' }}>\n          {render({ ...state, setProperties })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default ShowCase;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  rows?: Array<{ [string]: string }>\n};\n\nconst tableStyles = {\n  padding: 0,\n  tableLayout: 'auto',\n  boxShadow: '0 0 0 1px #CED4DE',\n  borderSpacing: 0,\n  borderColor: 'gray',\n  borderCollapse: 'collapse',\n  borderStyle: 'hidden',\n  borderRadius: '4px',\n  overflowY: 'hidden',\n  fontSize: '14px',\n  color: '#13161F',\n  width: '100%',\n  display: 'table'\n};\n\nconst theadStyles = {\n  color: '#7D899C',\n  background: '#EEF1F5',\n  textAlign: 'left',\n  fontSize: '14px',\n  borderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst trStyles = {\n  orderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst tdStyles = {\n  padding: '20px',\n  verticalAlign: 'top'\n};\n\nconst tdItalicStyles = {\n  ...tdStyles,\n  fontStyle: 'italic',\n  opacity: 0.5\n};\n\nconst tdCodeStyles = {\n  ...tdStyles,\n  fontFamily: '\"Source Code Pro\",monospace',\n  whiteSpace: 'nowrap'\n};\n\nconst applyStyles = content => {\n  if (content === '') {\n    return tdItalicStyles;\n  } else {\n    return tdCodeStyles;\n  }\n};\n\nconst formatContent = content => {\n  if (content === '') {\n    return 'none';\n  } else {\n    return content;\n  }\n};\n\nconst SimpleTable = ({ rows }: Props) => {\n  const keyBase = rows ? rows.map(row => (Object.values(row): any).join('-')).join('-') : '';\n  if (rows && rows.length) {\n    const headers = Object.keys(rows[0]);\n    return (\n      <table style={tableStyles}>\n        <thead style={theadStyles}>\n          <tr style={trStyles}>\n            {headers.map(header => (\n              <th key={'header-' + header} style={tdStyles}>\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, i) => (\n            <tr key={keyBase + '-row-' + i} style={trStyles}>\n              {(Object.values(row): any).map((value, j) => (\n                <td key={keyBase + '-cell-' + i + '-' + j} style={applyStyles(value)}>\n                  {formatContent(value)}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n};\n\nexport default SimpleTable;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Props marked with ⇘ are updated with the video streamer's `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/reference/observable-stream-state\"}}>{`state property`}</MDXTag>{` having the same name, when connected by the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/connected-controls#connecting-the-controls\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`connectControl()`}</MDXTag>{` HOC`}</MDXTag>{`. The ︎`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties()`}</MDXTag>{` callback prop is marked with ︎⇗ because it is connected for changing the playback state. More info in the architecture description of `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/overview#arrows-and-boxes\"}}>{`two-way data flow`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}