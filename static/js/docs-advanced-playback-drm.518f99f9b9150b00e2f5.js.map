{"version":3,"sources":["webpack:///./src/replay/docs/advanced-playback/drm.mdx"],"names":["MDXContent","React","Component","constructor","props","super","this","layout","render","components","name","parentName"],"mappings":"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","file":"static/js/docs-advanced-playback-drm.287baccb.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"drm\"}}>{`DRM`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Every browser only supports one DRM technology. Because of the closed/black-box security model of DRM, browsers' DRM support cannot be extended. There are three relevant technologies for the modern browsers: `}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`FairPlay: Only in Safari and with HLS streams`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`PlayReady: MS Edge on Windows and Internet Explorer`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Widevine: Chrome on all platforms, Firefox, Chromium-based Microsoft Edge on both Windows and MacOS`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`PlayReady and Widevine can typically be used with Shaka Player, and typically with MPEG-DASH, even if also HLS can be combined with these two DRM techs in Shaka Player.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This means that for covering all modern browsers with DRM encrypted playback, the following DRM services and stream formats must be available for one single content title:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Acquisition URL for FairPlay license service, to be used with HLS streams encrypted for FairPlay.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Acquisition URLs for a Widevine license service and a PlayReady license service, to be used with MPEG-DASH streams with common encryption (CENC).`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"p\" components={components}>{`According to the current browser, Replay must receive a source object specifying at least a license acquisition URL for the compatible DRM service, along with an URL to a stream encrypted for this DRM technology.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`For the same content title, the source object could then look like this in the following browsers:`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Firefox, Chrome, Chromium-based Microsoft Edge:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`const source = {\n  streamUrl: 'https://my-stream-cdn.net/my-content-title/stream.mpd',\n  contentType: 'application/dash+xml',\n  licenseUrl: 'https://my-license-service.com/widevine/license/my-content-title',\n  drmType: 'com.widevine.alpha'\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Microsoft Edge Legacy and Chromium-based Microsoft Edge (Windows):`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`const source = {\n  streamUrl: 'https://my-stream-cdn.net/my-content-title/stream.mpd',\n  contentType: 'application/dash+xml',\n  licenseUrl: 'https://my-license-service.com/playready/license/my-content-title',\n  drmType: 'com.microsoft.playready'\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Since the Chromium-based Microsoft Edge browser supports both Widevine and PlayReady (in Windows), it is important to specify the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`drmType`}</MDXTag>{` of the license acquisition URL, unless the same can be used for both technologies.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Currently, Replay doesn't support specifying license URLs for both DRM technologies in the same source object, so a browser detection must be performed in order to select the correct alternative to be included in the source object.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Safari:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`const source = {\n  streamUrl: 'https://my-stream-cdn.net/my-content-title/stream.m3u8',\n  contentType: 'application/x-mpegurl',\n  licenseUrl: 'https://my-license-service.com/fairplay/license/my-content-title',\n  drmType: 'com.apple.fps.1_0',\n  licenseAcquisitionDetails: {\n    fairPlayCertificateUrl: 'https://my-license-service.com/fairplay/certificate'    \n  }\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`Typically the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`licenseAcquisitionDetails`}</MDXTag>{` source object needs more details specified in order to complete the license acquisition, most commonly authorization headers or token headers to be passed in the license request.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"video-streamer-selection-with-drm-encrypted-streams\"}}>{`Video streamer selection with DRM encrypted streams`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The compound video streamer or Replay does not cover matching of DRM technology with browser and stream technology.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When using Replay for DRM playback, the app inserting the player have the responsibility to pass the correct stream and DRM details as the source object to the Replay component. This typically involves detecting the browser, and then look up stream and DRM details from e.g. a REST API.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`When the stream content type is specified, as in the examples above, the CompoundVideoStreamer can be used for selecting the correct video streamer and third party library supporting the stream.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"specifying-further-license-acquisition-or-drm-details\"}}>{`Specifying further license acquisition or DRM details`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"headers\"}}>{`Headers`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Headers can be added to the license acqusition request, if required. They are specified with header names/values as keys/values, like in this example:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`const source = {\n  streamUrl: 'https://my-stream-cdn.net/my-content-title/stream.mpd',\n  contentType: 'application/dash+xml',\n  licenseUrl: 'https://my-license-service.com/playready/license/my-content-title',\n  drmType: 'com.microsoft.playready',\n  licenseAcquisitionDetails: {\n    licenseRequestHeaders: {\n      Authorization: 'some-user-token',\n      'x-some-custom-header': 'some-value'\n    }    \n  }\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"certificates\"}}>{`Certificates`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In order to complete a FairPlay license acquisition, a certificate URL must always be specified. For Widevine, a similar URL might be passed but is often not required. See the Safari example above for FairPlay, and the following for Widevine:`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`const source = {\n  streamUrl: 'https://my-stream-cdn.net/my-content-title/stream.mpd',\n  contentType: 'application/dash+xml',\n  licenseUrl: 'https://my-license-service.com/widevine/license/my-content-title',\n  drmType: 'com.widevine.alpha',\n  licenseAcquisitionDetails: {\n    widevineServiceCertificateUrl: 'https://my-license-service.com/widevine/certificate'      \n  }\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`If no `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`widevineServiceCertificateUrl`}</MDXTag>{` is specified, the Widevine CDM reuses the license acquisition URL for fetching the service certificate.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The certificate URLs can also be specified as part of Replay's configuration.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"fairplay-request-formats-and-content-ids\"}}>{`FairPlay request formats and content IDs`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The FairPlay license acquisition client in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`HtmlVideoStreamer`}</MDXTag>{` supports three request formats: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`'base64'`}</MDXTag>{` (legacy), `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`'binary'`}</MDXTag>{`, and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`'formdata'`}</MDXTag>{` (default). Different services expect different data and formats, and these three types adapt to some tested real-world services.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`FairPlay's concept of content ID or asset ID can either be specified directly in the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`contentId`}</MDXTag>{` property, or be extracted from the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`skd://`}</MDXTag>{` url. `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`If `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`contentIdExtractMatch`}</MDXTag>{` contains a regex (either regex object or string), what's matching in the skd url will be passed as the content ID in the license request. The commented out example underneath passes the full URL.`}</MDXTag>\n<MDXTag name=\"pre\" components={components}><MDXTag name=\"code\" components={components} parentName=\"pre\" props={{\"className\":\"language-javascript\"}}>{`const source = {\n  streamUrl: 'https://my-stream-cdn.net/my-content-title/stream.m3u8',\n  contentType: 'application/x-mpegurl',\n  licenseUrl: 'https://my-license-service.com/fairplay/license/my-content-title',\n  drmType: 'com.apple.fps.1_0',\n  licenseAcquisitionDetails: {\n    fairPlayCertificateUrl: 'https://my-license-service.com/fairplay/certificate',\n    contentId: 'my-content-id', // Either specify the content ID, or how to extract it:\n    // contentIdExtractMatch: /(.*)/\n    fairPlayRequestFormat: 'base64' \n  }\n};\n`}</MDXTag></MDXTag>\n<MDXTag name=\"p\" components={components}>{`The `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`contentIdExtractMatch`}</MDXTag>{` rule and FairPlay request format can also be specified as part of Replay's configuration.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}