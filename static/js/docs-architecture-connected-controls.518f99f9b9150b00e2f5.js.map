{"version":3,"sources":["webpack:///./src/replay/docs/architecture/connected-controls.mdx"],"names":["MDXContent","React","Component","constructor","props","super","this","layout","render","components","name","parentName"],"mappings":"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","file":"static/js/docs-architecture-connected-controls.4dbd7e48.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"connected-player-controls\"}}>{`Connected player controls`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"generic-components-and-specialised-player-controls\"}}>{`Generic components and specialised player controls`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The core building blocks are a few generic components: `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Button/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<ToggleButton/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Selector/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Slider/>`}</MDXTag>{`, and `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Container/>`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`From this, dedicated player controls are built. These are the ones currently included in the Replay component library, and also in the defult player:`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<PlayPauseButton/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<SkipButton/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<GotoLiveButton/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<ExitButton/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<FullscreenButton/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<PipButton/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<AirPlayButton/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Volume/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Timeline/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<TimeDisplay/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<QualitySelector/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<SubtitlesSelector/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<AudioSelector/>`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"containers-and-helpers\"}}>{`Containers and helpers`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In addition to this, several helper components and container components, are essential when building a player UI:`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<AspectRatio/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Fullscreen/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<InteractionDetector/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<KeyboardShortcuts/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<ResponsiveClassNames/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<PlayerStateClassNames/>`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<PreferredSettingsApplicator/>`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"a-common-control-api-pattern\"}}>{`A common control API pattern`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The different controls expose props that should be recognisable and consistent:`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Props with names matching one or several playback state properties related to the control purpose.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Callback prop setProperties for manipulating the playback state (when connected, see below).`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Appearance props for control content (graphics, text) and styling/class names.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`In some cases, simple configuration props for alternative control behaviour/appearance`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"connecting-the-controls\"}}>{`Connecting the controls`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The controls are on its own not communicating with the video streamer performing the playback. Through a higher order component (HOC), all Replay controls are connected to the player controller context. Custom controls can also get connected by applying the same higher order component, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`connectControl()`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The player controller provides the context, and also connects the video streamer so that there can be two-way updates between controls and the video streamer.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`What playback state properties a component is consuming, is specified when applying the HOC. This ensures that the rendered component is only updated when the desired properties are changed. This prevents frequent updates coming mainly from playback position updates.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In addition to passing down the video stream state properties registered for consumption when connecting the control, this HOC passes down a couple of methods (callback props): `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties()`}</MDXTag>{`, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`inspect()`}</MDXTag>{`. `}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The first one enables a control to, eh, control the playback. For instance can playback be paused by the control through invoking `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties({ isPaused: true })`}</MDXTag>{`. In other words, this is the communication or state updates going back to the video streamer.`}</MDXTag>\n<MDXTag name=\"p\" components={components}><MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`inspect()`}</MDXTag>{` can be used to get all the latest state properties reported from the playback. This is an alternative to registering for state property updates when the control isn't needing a rerender on every change of that state property.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Not all controls and containers/helpers need to be connected, but most of them are.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"example-toggling-pause-state-with-the-playpausebutton\"}}>{`Example: Toggling pause state with the PlayPauseButton`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}