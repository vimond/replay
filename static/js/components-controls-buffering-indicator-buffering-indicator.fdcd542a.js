(window.webpackJsonp=window.webpackJsonp||[]).push([[7],{"./src/replay/components/common.js":function(e,n,t){"use strict";t.d(n,"a",(function(){return a})),t.d(n,"k",(function(){return r})),t.d(n,"g",(function(){return i})),t.d(n,"d",(function(){return s})),t.d(n,"f",(function(){return c})),t.d(n,"h",(function(){return A})),t.d(n,"i",(function(){return g})),t.d(n,"j",(function(){return m})),t.d(n,"c",(function(){return d})),t.d(n,"b",(function(){return h})),t.d(n,"e",(function(){return w}));const a="replay-";function r(e,...n){const t=null==e?"":e,a=[];for(let r=0;r<n.length;r++)n[r]&&a.push(t+n[r]);return a.join(" ")}const o=e=>e;function i({classes:e,selectClasses:n,classNames:t,classNamePrefix:a}){if(e&&n){const t=n(e);return Array.isArray(t)?t.filter(o).join(" "):t}if(t)return r(a,...t)}function s(e,n){const t=(n||e.currentTarget).getBoundingClientRect();let a;return a=e.touches&&e.touches.length>0?e.touches[0]:e.changedTouches&&e.changedTouches.length>0?e.changedTouches[0]:e,{x:Math.max(0,Math.min(a.pageX-t.left,t.width)),y:Math.max(0,Math.min(a.pageY-t.top,t.height)),width:t.width,height:t.height}}function c(e){return n=>{e.indexOf(n.key)>=0&&(n.preventDefault(),n.stopPropagation())}}const A=(e,n)=>e!==n&&(!(e instanceof Date&&n instanceof Date&&e.getTime()===n.getTime())&&!(Number.isNaN(e)&&Number.isNaN(n))),l=e=>null!=e&&e.constructor==={}.constructor,g=(e,n)=>{if(e===n)return!0;if(l(e)&&l(n)){const t=Object.keys(e),a=Object.keys(n);if(t.length!==a.length)return!1;return!(t.filter(t=>A(e[t],n[t])).length>0)&&0===a.filter(t=>A(n[t],e[t])).length}if(Array.isArray(e)&&Array.isArray(n)&&e.length===n.length){for(let t=e.length;t--;)if(e[t]!==n[t])return!1;return!0}return!1};function p(e){if(null==e)return{};{const n={},t=e;return Object.keys(e).forEach(e=>{l(t[e])?n[e]=p(t[e]):n[e]=t[e]}),n}}function m(e,n){const t=p(e);if(n){const e=n;Object.getOwnPropertyNames(e).forEach(n=>{l(e[n])?l(t[n])?t[n]=m(t[n],e[n]):t[n]=p(e[n]):t[n]=e[n]})}return t}const u=(e,n="",t=!1,a=!0)=>t&&0===e?"":e<10&&a?"0".concat(e).concat(n):"".concat(e).concat(n),d=(e,n="-")=>{let t=Math.round(e),a="";"number"!==typeof e||isNaN(e)||e===1/0?t=0:t<0&&(t=-t,a=n);const r=Math.floor(t/86400),o=86400*r,i=Math.floor((t-o)/3600),s=o+3600*i,c=Math.floor((t-s)/60),A=t-s-60*c;return a+u(r,".",!0,!1)+u(i,":",0===r)+u(c,":",!1)+u(A)},h=e=>{const n=e instanceof Date&&!isNaN(e.getTime());let t=0,a=0,r=0;return n&&null!=e&&(t=n?e.getHours():0,a=n?e.getMinutes():0,r=n?e.getSeconds():0),u(t,":",!1)+u(a,":",!1)+u(r)},w=(e,n)=>{let t=null;return{start:()=>{t||(t=setInterval(e,1e3*n))},stop:()=>{t&&(clearInterval(t),t=null)}}}},"./src/replay/components/controls/BufferingIndicator/BufferingIndicator.js":function(e,n,t){"use strict";var a=t("./node_modules/react/index.js"),r=t("./src/replay/components/common.js");const o="buffering-indicator",i=({children:e,content:n,isBuffering:t,isSeeking:i,playState:s,renderStrategy:c="when-buffering",label:A,classNamePrefix:l=r.a})=>{const g=t||i||"starting"===s||"buffering"===s||"seeking"===s;return"always"===c?g?a.createElement("div",{title:A,className:Object(r.k)(l,o,"buffering")},e||n):a.createElement("div",{className:Object(r.k)(l,o)},e||n):g?a.createElement("div",{title:A,className:Object(r.k)(l,o,"buffering")},e||n):null};i.streamStateKeysForObservation=["isBuffering","isSeeking","playState"],i.displayName="BufferingIndicator",n.a=i,i.__docgenInfo={description:"",methods:[],displayName:"BufferingIndicator",props:{renderStrategy:{defaultValue:{value:"'when-buffering'",computed:!1},required:!1,flowType:{name:"union",raw:"'when-buffering' | 'always'",elements:[{name:"literal",value:"'when-buffering'"},{name:"literal",value:"'always'"}]},description:"When set to 'always', the content is always rendered, but buffering is indicated through a class name on the component's root element. This option is used when controlling display through CSS."},classNamePrefix:{defaultValue:{value:"defaultClassNamePrefix",computed:!0},required:!1},isBuffering:{required:!1,flowType:{name:"boolean"},description:"\u21d8\ufe0e If true, the buffering indicator is shown or the root element has a class name indicating buffering."},isSeeking:{required:!1,flowType:{name:"boolean"},description:"\u21d8\ufe0e If true, the buffering indicator is shown or the root element has a class name indicating buffering."},playState:{required:!1,flowType:{name:"PlayState"},description:"\u21d8\ufe0e If set to 'starting', 'buffering', or 'seeking', the buffering indicator is shown or the root element has a class name indicating buffering."},children:{required:!1,flowType:{name:"ReactNode",raw:"React.Node"},description:"The content to show if buffering, or always if renderingStrategy is 'always'."},content:{required:!1,flowType:{name:"ReactNode",raw:"React.Node"},description:"Alternative to specifying children. Other Replay controls use content as the convention."}}}},"./src/replay/components/controls/BufferingIndicator/BufferingIndicator.mdx":function(e,n,t){"use strict";t.r(n),t.d(n,"default",(function(){return p}));var a=t("./node_modules/react/index.js"),r=t.n(a),o=t("./node_modules/@mdx-js/tag/dist/index.js"),i=(t("./src/replay/replay-default.css"),t("./src/replay/docs/mdx-helpers/SimpleTable.js")),s=t("./node_modules/docz/dist/index.m.js"),c=t("./src/replay/components/controls/BufferingIndicator/BufferingIndicator.js"),A=t("./src/replay/default-player/default-skin/LoadingAnimation.js"),l=t("./src/replay/docs/props-footnote.md");function g(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}class p extends r.a.Component{constructor(e){super(e),this.layout=null}render(){const e=this.props,n=e.components,t=g(e,["components"]);return r.a.createElement(o.MDXTag,{name:"wrapper",components:n},r.a.createElement(o.MDXTag,{name:"h1",components:n,props:{id:"bufferingindicator-component"}},"BufferingIndicator component"),r.a.createElement(o.MDXTag,{name:"p",components:n},"Displays any overlay (animation, graphics, etc.) when a buffering, starting, or seeking state is reported."),r.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"summary"}},"Summary"),r.a.createElement(o.MDXTag,{name:"p",components:n},"The main concept of this component is to display and animate an overlay when the user needs to wait for playback to start or resume (buffering)."),r.a.createElement(o.MDXTag,{name:"p",components:n},"The overlay is specified as the component's child, or in the ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"content")," prop."),r.a.createElement(o.MDXTag,{name:"p",components:n},"If the prop ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"renderStrategy")," is set to ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"'always'"),', the content will always be rendered. However, the class name "buffering" (with prefix) will be added to the compoent\'s root element when the state is buffering.'),r.a.createElement(o.MDXTag,{name:"p",components:n},"If the prop ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"renderStrategy")," is set to ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"'when-buffering'"),", no content will be rendered when not buffering. The drawback of this approach is that the indicator will stop displaying abruptly, and a smooth fade-out animation cannot be applied. "),r.a.createElement(o.MDXTag,{name:"p",components:n},"The state of buffering is set when one or both of the props ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"isBuffering")," or ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"isSeeking")," are set to true, or if the ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"playState")," prop is set to ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"'starting'"),", ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"'buffering'"),", ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"'seeking'"),"."),r.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"example"}},"Example"),r.a.createElement(s.Playground,{__codesandbox:"",__position:0,__code:"<div\n  style={{ backgroundColor: 'gray', height: '100px', position: 'relative' }}\n>\n  <BufferingIndicator\n    renderStrategy=\"always\"\n    isBuffering={false}\n    isSeeking={false}\n    playState=\"starting\"\n  >\n    <LoadingAnimation />\n  </BufferingIndicator>\n</div>",__scope:{props:this?this.props:t,SimpleTable:i.a,BufferingIndicator:c.a,LoadingAnimation:A.a,Footnote:l.a}},r.a.createElement("div",{style:{backgroundColor:"gray",height:"100px",position:"relative"}},r.a.createElement(c.a,{renderStrategy:"always",isBuffering:!1,isSeeking:!1,playState:"starting"},r.a.createElement(A.a,null)))),r.a.createElement(o.MDXTag,{name:"p",components:n},"In this example, the animation is showing because ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},'playState="starting""'),". Try experimenting with other values for playState, and with ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"true")," for isBuffering/isSeeking."),r.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"props"}},"Props"),r.a.createElement(s.PropsTable,{of:c.a}),r.a.createElement(l.a,null),r.a.createElement(o.MDXTag,{name:"h2",components:n,props:{id:"component-dom-with-class-names"}},"Component DOM with class names"),r.a.createElement(o.MDXTag,{name:"p",components:n},"Please read the ",r.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"/custom-replay/skins-styles"}},"general principles")," for Replay class names and styling."),r.a.createElement(i.a,{rows:[{Element:"div","Class name":"buffering-indicator","Generic class name":"",States:"buffering",Parent:""}]}),r.a.createElement(o.MDXTag,{name:"p",components:n},"Note that the state class name ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"buffering")," is only present when buffering is reported, and the render strategy is set to ",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"'always'"),"."))}}p.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}},"./src/replay/default-player/default-skin/LoadingAnimation.js":function(e,n,t){"use strict";var a=t("./node_modules/react/index.js");const r=()=>a.createElement("svg",{width:"100%",height:"100%",viewBox:"0 0 38 38",stroke:"currentColor"},a.createElement("g",{fill:"none",fillRule:"evenodd"},a.createElement("g",{transform:"translate(1 1)",strokeWidth:"2"},a.createElement("circle",{stroke:"currentColor",strokeOpacity:"0.5",cx:"18",cy:"18",r:"18"}),a.createElement("path",{className:"animated",d:"M36 18c0-9.94-8.06-18-18-18"}))));n.a=r,r.__docgenInfo={description:"",methods:[],displayName:"LoadingAnimation"}},"./src/replay/docs/mdx-helpers/SimpleTable.js":function(e,n,t){"use strict";var a=t("./node_modules/react/index.js");function r(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?r(Object(t),!0).forEach((function(n){i(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):r(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function i(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}const s={padding:0,tableLayout:"auto",boxShadow:"0 0 0 1px #CED4DE",borderSpacing:0,borderColor:"gray",borderCollapse:"collapse",borderStyle:"hidden",borderRadius:"4px",overflowY:"hidden",fontSize:"14px",color:"#13161F",width:"100%",display:"table"},c={color:"#7D899C",background:"#EEF1F5",textAlign:"left",fontSize:"14px",borderSpacing:0,borderCollapse:"collapse"},A={orderSpacing:0,borderCollapse:"collapse"},l={padding:"20px",verticalAlign:"top"},g=o({},l,{fontStyle:"italic",opacity:.5}),p=o({},l,{fontFamily:'"Source Code Pro",monospace',whiteSpace:"nowrap"}),m=({rows:e})=>{const n=e?e.map(e=>Object.values(e).join("-")).join("-"):"";if(e&&e.length){const t=Object.keys(e[0]);return a.createElement("table",{style:s},a.createElement("thead",{style:c},a.createElement("tr",{style:A},t.map(e=>a.createElement("th",{key:"header-"+e,style:l},e)))),a.createElement("tbody",null,e.map((e,t)=>a.createElement("tr",{key:n+"-row-"+t,style:A},Object.values(e).map((e,r)=>{return a.createElement("td",{key:n+"-cell-"+t+"-"+r,style:(o=e,""===o?g:p)},(e=>""===e?"none":e)(e));var o})))))}};n.a=m,m.__docgenInfo={description:"",methods:[],displayName:"SimpleTable",props:{rows:{required:!1,flowType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ [string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]}}],raw:"Array<{ [string]: string }>"},description:""}}}},"./src/replay/docs/props-footnote.md":function(e,n,t){"use strict";t.d(n,"a",(function(){return s}));var a=t("./node_modules/react/index.js"),r=t.n(a),o=t("./node_modules/@mdx-js/tag/dist/index.js");function i(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}class s extends r.a.Component{constructor(e){super(e),this.layout=null}render(){const e=this.props,n=e.components;i(e,["components"]);return r.a.createElement(o.MDXTag,{name:"wrapper",components:n},r.a.createElement(o.MDXTag,{name:"p",components:n},"Props marked with \u21d8 are updated with the video streamer's ",r.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"/reference/observable-stream-state"}},"state property")," having the same name, when connected by the ",r.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"/architecture/connected-controls#connecting-the-controls"}},r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"a"},"connectControl()")," HOC"),". The \ufe0e",r.a.createElement(o.MDXTag,{name:"inlineCode",components:n,parentName:"p"},"setProperties()")," callback prop is marked with \ufe0e\u21d7 because it is connected for changing the playback state. More info in the architecture description of ",r.a.createElement(o.MDXTag,{name:"a",components:n,parentName:"p",props:{href:"/architecture/overview#arrows-and-boxes"}},"two-way data flow"),"."))}}s.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}},"./src/replay/replay-default.css":function(e,n,t){}}]);
//# sourceMappingURL=components-controls-buffering-indicator-buffering-indicator.db0fdb463ccd482b26a4.js.map