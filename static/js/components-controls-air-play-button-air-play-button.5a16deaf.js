(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{"./src/replay/components/common.js":function(e,t,n){"use strict";n.d(t,"a",(function(){return r})),n.d(t,"k",(function(){return o})),n.d(t,"g",(function(){return i})),n.d(t,"d",(function(){return s})),n.d(t,"f",(function(){return l})),n.d(t,"h",(function(){return c})),n.d(t,"i",(function(){return A})),n.d(t,"j",(function(){return u})),n.d(t,"c",(function(){return m})),n.d(t,"b",(function(){return y})),n.d(t,"e",(function(){return h}));const r="replay-";function o(e,...t){const n=null==e?"":e,r=[];for(let o=0;o<t.length;o++)t[o]&&r.push(n+t[o]);return r.join(" ")}const a=e=>e;function i({classes:e,selectClasses:t,classNames:n,classNamePrefix:r}){if(e&&t){const n=t(e);return Array.isArray(n)?n.filter(a).join(" "):n}if(n)return o(r,...n)}function s(e,t){const n=(t||e.currentTarget).getBoundingClientRect();let r;return r=e.touches&&e.touches.length>0?e.touches[0]:e.changedTouches&&e.changedTouches.length>0?e.changedTouches[0]:e,{x:Math.max(0,Math.min(r.pageX-n.left,n.width)),y:Math.max(0,Math.min(r.pageY-n.top,n.height)),width:n.width,height:n.height}}function l(e){return t=>{e.indexOf(t.key)>=0&&(t.preventDefault(),t.stopPropagation())}}const c=(e,t)=>e!==t&&(!(e instanceof Date&&t instanceof Date&&e.getTime()===t.getTime())&&!(Number.isNaN(e)&&Number.isNaN(t))),p=e=>null!=e&&e.constructor==={}.constructor,A=(e,t)=>{if(e===t)return!0;if(p(e)&&p(t)){const n=Object.keys(e),r=Object.keys(t);if(n.length!==r.length)return!1;return!(n.filter(n=>c(e[n],t[n])).length>0)&&0===r.filter(n=>c(t[n],e[n])).length}if(Array.isArray(e)&&Array.isArray(t)&&e.length===t.length){for(let n=e.length;n--;)if(e[n]!==t[n])return!1;return!0}return!1};function g(e){if(null==e)return{};{const t={},n=e;return Object.keys(e).forEach(e=>{p(n[e])?t[e]=g(n[e]):t[e]=n[e]}),t}}function u(e,t){const n=g(e);if(t){const e=t;Object.getOwnPropertyNames(e).forEach(t=>{p(e[t])?p(n[t])?n[t]=u(n[t],e[t]):n[t]=g(e[t]):n[t]=e[t]})}return n}const d=(e,t="",n=!1,r=!0)=>n&&0===e?"":e<10&&r?"0".concat(e).concat(t):"".concat(e).concat(t),m=(e,t="-")=>{let n=Math.round(e),r="";"number"!==typeof e||isNaN(e)||e===1/0?n=0:n<0&&(n=-n,r=t);const o=Math.floor(n/86400),a=86400*o,i=Math.floor((n-a)/3600),s=a+3600*i,l=Math.floor((n-s)/60),c=n-s-60*l;return r+d(o,".",!0,!1)+d(i,":",0===o)+d(l,":",!1)+d(c)},y=e=>{const t=e instanceof Date&&!isNaN(e.getTime());let n=0,r=0,o=0;return t&&null!=e&&(n=t?e.getHours():0,r=t?e.getMinutes():0,o=t?e.getSeconds():0),d(n,":",!1)+d(r,":",!1)+d(o)},h=(e,t)=>{let n=null;return{start:()=>{n||(n=setInterval(e,1e3*t))},stop:()=>{n&&(clearInterval(n),n=null)}}}},"./src/replay/components/controls/AirPlayButton/AirPlayButton.js":function(e,t,n){"use strict";var r=n("./node_modules/react/index.js"),o=n("./src/replay/components/generic/ToggleButton/ToggleButton.js"),a=n("./src/replay/components/common.js");function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class s extends r.Component{constructor(...e){super(...e),i(this,"handleToggle",()=>{this.props.setProperties&&this.props.setProperties({isAirPlayTargetPickerVisible:!0})})}render(){if(this.props.isAirPlayAvailable){const e=this.props,t=e.isAirPlayActive,n=e.airPlayActiveContent,a=e.airPlayInactiveContent,i=e.label,s=e.classNamePrefix;return r.createElement(o.a,{classNamePrefix:s,isOn:t,className:"airplay-button",label:i,onToggle:this.handleToggle,toggledOnContent:n,toggledOffContent:a})}return null}}i(s,"defaultProps",{classNamePrefix:a.a}),i(s,"streamStateKeysForObservation",["isAirPlayAvailable","isAirPlayActive"]),s.displayName="AirPlayButton",t.a=s,s.__docgenInfo={description:"",methods:[{name:"handleToggle",docblock:null,modifiers:[],params:[],returns:null}],displayName:"AirPlayButton",props:{classNamePrefix:{defaultValue:{value:"defaultClassNamePrefix",computed:!0},required:!1},isAirPlayAvailable:{required:!1,flowType:{name:"boolean"},description:"If true, this button will be rendered."},isAirPlayActive:{required:!1,flowType:{name:"boolean"},description:"The current AirPlay state, as reported from a video streamer."},setProperties:{required:!1,flowType:{name:"signature",type:"function",raw:"({ isAirPlayTargetPickerVisible: true }) => void",signature:{arguments:[{name:"",type:{name:"signature",type:"object",raw:"{ isAirPlayTargetPickerVisible: true }",signature:{properties:[{key:"isAirPlayTargetPickerVisible",value:{name:"literal",value:"true",required:!0}}]}}}],return:{name:"void"}}},description:"Intended for the setProperties method passed from the player controller through connectControl(). When the button is clicked, this callback is invoked with an object having an isAirPlayTargetPickerVisible property equal to true."},airPlayActiveContent:{required:!0,flowType:{name:"ReactNode",raw:"React.Node"},description:"The button content to be displayed while isAirPlayActive is true."},airPlayInactiveContent:{required:!0,flowType:{name:"ReactNode",raw:"React.Node"},description:"The button content to be displayed while isAirPlayActive is false."}}}},"./src/replay/components/controls/AirPlayButton/AirPlayButton.mdx":function(e,t,n){"use strict";n.r(t),n.d(t,"default",(function(){return u}));var r=n("./node_modules/react/index.js"),o=n.n(r),a=n("./node_modules/@mdx-js/tag/dist/index.js"),i=n("./node_modules/docz/dist/index.m.js"),s=n("./src/replay/components/controls/AirPlayButton/AirPlayButton.js"),l=n("./src/replay/docs/mdx-helpers/ShowCase.js"),c=n("./src/replay/docs/mdx-helpers/SimpleTable.js"),p=n("./node_modules/react-feather/dist/icons/airplay.js"),A=n("./src/replay/docs/props-footnote.md");function g(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}class u extends o.a.Component{constructor(e){super(e),this.layout=null}render(){const e=this.props,t=e.components,n=g(e,["components"]);return o.a.createElement(a.MDXTag,{name:"wrapper",components:t},o.a.createElement(a.MDXTag,{name:"h1",components:t,props:{id:"airplaybutton"}},"AirPlayButton"),o.a.createElement(a.MDXTag,{name:"p",components:t},"Control bar button for invoking Safari's AirPlay device picker, allowing transferring the playback to a different device."),o.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"summary"}},"Summary"),o.a.createElement(a.MDXTag,{name:"p",components:t},"In order for this button to render, the prop ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"isAirPlayAvailable")," must have the value ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"true"),". This property is reported from the video streamer based on browser feature detection and AirPlay target devices being available. Currently only Apple Safari (and iOS browsers built in on it) supports AirPlay."),o.a.createElement(a.MDXTag,{name:"p",components:t},"The prop ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"isAirPlayActive")," indicates to the button if picture-in-picture playback is currently active(",o.a.createElement(a.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"true"),"/",o.a.createElement(a.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"false"),"). This can be used for indicating the AirPlay mode in the button. Through the callback prop ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"setProperties")," in invokes ",o.a.createElement(a.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"setProperties({ isAirPlayTargetPickerVisible: true })")," on clicks. Even if this is a toggle button, it cannot be used to hide the target picker. However, any other user gestures will do so."),o.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"example"}},"Example"),o.a.createElement(i.Playground,{__codesandbox:"",__position:0,__code:"<ShowCase\n  render={({ setProperties, isAirPlayTargetPickerVisible }) => (\n    <AirPlayButton\n      isAirPlayAvailable={true}\n      airPlayActiveContent={<Airplay />}\n      airPlayInactiveContent={<Airplay />}\n      setProperties={value =>\n        console.log('setProperties() invoked with', value)\n      }\n    />\n  )}\n/>",__scope:{props:this?this.props:n,AirPlayButton:s.a,ShowCase:l.a,SimpleTable:c.a,Airplay:p.a,Footnote:A.a}},o.a.createElement(l.a,{render:({setProperties:e,isAirPlayTargetPickerVisible:t})=>o.a.createElement(s.a,{isAirPlayAvailable:!0,airPlayActiveContent:o.a.createElement(p.a,null),airPlayInactiveContent:o.a.createElement(p.a,null),setProperties:e=>console.log("setProperties() invoked with",e)})})),o.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"props"}},"Props"),o.a.createElement(i.PropsTable,{of:s.a}),o.a.createElement(A.a,null),o.a.createElement(a.MDXTag,{name:"h2",components:t,props:{id:"component-dom-with-class-names"}},"Component DOM with class names"),o.a.createElement(a.MDXTag,{name:"p",components:t},"Please read the ",o.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"/custom-replay/skins-styles"}},"general principles")," for Replay class names and styling."),o.a.createElement(c.a,{rows:[{Element:"div","Class name":"airplay-button","Generic class name":"toggle-button",States:"toggled-off, toggled-on",Parent:""},{Element:"div","Class name":"","Generic class name":"",States:"",Parent:".airplay-button"}]}))}}u.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}},"./src/replay/components/generic/ToggleButton/ToggleButton.js":function(e,t,n){"use strict";var r=n("./node_modules/react/index.js"),o=n("./src/replay/components/common.js");function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const i=e=>e.toggleButtonOff||e.toggleButton,s=e=>e.toggleButtonOn||e.toggleButton;class l extends r.Component{constructor(...e){super(...e),a(this,"handleClick",()=>this.props.onToggle&&this.props.onToggle(!this.props.isOn)),a(this,"handleKeyDown",Object(o.f)(["Enter"," "])),a(this,"handleKeyUp",e=>{"Enter"!==e.key&&" "!==e.key||(e.preventDefault(),this.handleClick())})}render(){const e=this.props,t=e.isOn,n=e.label,a=e.className,l=e.classNamePrefix,c=e.toggledOnContent,p=e.toggledOffContent,A=e.onRef,g=e.classes,u=t?"toggled-on":"toggled-off",d=Object(o.g)({classes:g,selectClasses:t?s:i,classNamePrefix:l,classNames:[a,"toggle-button",u]}),m=t?c:p;return r.createElement("div",{role:"button","aria-pressed":t,title:n,onClick:this.handleClick,onKeyUp:this.handleKeyUp,onKeyDown:this.handleKeyDown,ref:A,className:d,tabIndex:0},r.createElement("div",{tabIndex:-1},m))}}a(l,"defaultProps",{useDefaultClassNaming:!0}),t.a=l,l.__docgenInfo={description:"Renders a button with two states - toggled on and off. When clicked, it reports back the opposite state.",methods:[{name:"handleClick",docblock:null,modifiers:[],params:[],returns:null},{name:"handleKeyUp",docblock:null,modifiers:[],params:[{name:"keyboardEvent",type:{name:"KeyboardEvent",alias:"KeyboardEvent"}}],returns:null}],displayName:"ToggleButton",props:{useDefaultClassNaming:{defaultValue:{value:"true",computed:!1},required:!1},isOn:{required:!1,flowType:{name:"boolean"},description:"Set to true if the button should be in the toggled on mode."},label:{required:!1,flowType:{name:"string"},description:"The label will appear in the title attribute of the root DOM element of the toggle button."},toggledOffContent:{required:!1,flowType:{name:"ReactNode",raw:"React.Node"},description:"The button content to be displayed when the button is toggled off."},toggledOnContent:{required:!1,flowType:{name:"ReactNode",raw:"React.Node"},description:"The button content to be displayed when the button is toggled on."},onToggle:{required:!1,flowType:{name:"signature",type:"function",raw:"boolean => void",signature:{arguments:[{name:"",type:{name:"boolean"}}],return:{name:"void"}}},description:"A callback method that will be invoked when the button is clicked and the value toggled. If the button has been toggled on, true is passed to the callback."},onRef:{required:!1,flowType:{name:"signature",type:"function",raw:"(?HTMLElement) => void",signature:{arguments:[{name:"",type:{name:"HTMLElement",nullable:!0}}],return:{name:"void"}}},description:"A callback method invoked with the rendered button element, for focus purposes."}}}},"./src/replay/docs/mdx-helpers/ShowCase.js":function(e,t,n){"use strict";var r=n("./node_modules/react/index.js");n("./src/replay/replay-default.css");function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}class i extends r.Component{constructor(e){super(e),a(this,"setProperties",e=>this.setState((e=>{const t={};return Object.keys(e).forEach(n=>{let r=e[n];switch(n){case"selectedAudioTrack":t.currentAudioTrack=r;break;case"selectedTextTrack":t.currentTextTrack=r;break;default:t[n]=r}}),t})(e))),this.state={}}render(){const e=this.setProperties,t=this.state,n=this.props,i=n.render,s=n.height,l=s?{width:"100%",height:s}:{width:"100%"};return r.createElement("div",null,r.createElement("div",{style:l}),r.createElement("div",{className:"replay-controls-bar",style:{justifyContent:"center"}},i(function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({},t,{setProperties:e}))))}}t.a=i,i.__docgenInfo={description:"",methods:[{name:"setProperties",docblock:null,modifiers:[],params:[{name:"props",type:{name:"PlaybackProps",alias:"PlaybackProps"}}],returns:null}],displayName:"ShowCase",props:{render:{required:!0,flowType:{name:"signature",type:"function",raw:"(VideoStreamState & { setProperties: PlaybackProps => void }) => React.Node",signature:{arguments:[{name:"",type:{name:"intersection",raw:"VideoStreamState & { setProperties: PlaybackProps => void }",elements:[{name:"VideoStreamState"},{name:"signature",type:"object",raw:"{ setProperties: PlaybackProps => void }",signature:{properties:[{key:"setProperties",value:{name:"signature",type:"function",raw:"PlaybackProps => void",signature:{arguments:[{name:"",type:{name:"PlaybackProps"}}],return:{name:"void"}},required:!0}}]}}]}}],return:{name:"ReactNode",raw:"React.Node"}}},description:""},height:{required:!1,flowType:{name:"string"},description:""}}}},"./src/replay/docs/mdx-helpers/SimpleTable.js":function(e,t,n){"use strict";var r=n("./node_modules/react/index.js");function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const s={padding:0,tableLayout:"auto",boxShadow:"0 0 0 1px #CED4DE",borderSpacing:0,borderColor:"gray",borderCollapse:"collapse",borderStyle:"hidden",borderRadius:"4px",overflowY:"hidden",fontSize:"14px",color:"#13161F",width:"100%",display:"table"},l={color:"#7D899C",background:"#EEF1F5",textAlign:"left",fontSize:"14px",borderSpacing:0,borderCollapse:"collapse"},c={orderSpacing:0,borderCollapse:"collapse"},p={padding:"20px",verticalAlign:"top"},A=a({},p,{fontStyle:"italic",opacity:.5}),g=a({},p,{fontFamily:'"Source Code Pro",monospace',whiteSpace:"nowrap"}),u=({rows:e})=>{const t=e?e.map(e=>Object.values(e).join("-")).join("-"):"";if(e&&e.length){const n=Object.keys(e[0]);return r.createElement("table",{style:s},r.createElement("thead",{style:l},r.createElement("tr",{style:c},n.map(e=>r.createElement("th",{key:"header-"+e,style:p},e)))),r.createElement("tbody",null,e.map((e,n)=>r.createElement("tr",{key:t+"-row-"+n,style:c},Object.values(e).map((e,o)=>{return r.createElement("td",{key:t+"-cell-"+n+"-"+o,style:(a=e,""===a?A:g)},(e=>""===e?"none":e)(e));var a})))))}};t.a=u,u.__docgenInfo={description:"",methods:[],displayName:"SimpleTable",props:{rows:{required:!1,flowType:{name:"Array",elements:[{name:"signature",type:"object",raw:"{ [string]: string }",signature:{properties:[{key:{name:"string"},value:{name:"string",required:!0}}]}}],raw:"Array<{ [string]: string }>"},description:""}}}},"./src/replay/docs/props-footnote.md":function(e,t,n){"use strict";n.d(t,"a",(function(){return s}));var r=n("./node_modules/react/index.js"),o=n.n(r),a=n("./node_modules/@mdx-js/tag/dist/index.js");function i(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}class s extends o.a.Component{constructor(e){super(e),this.layout=null}render(){const e=this.props,t=e.components;i(e,["components"]);return o.a.createElement(a.MDXTag,{name:"wrapper",components:t},o.a.createElement(a.MDXTag,{name:"p",components:t},"Props marked with \u21d8 are updated with the video streamer's ",o.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"/reference/observable-stream-state"}},"state property")," having the same name, when connected by the ",o.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"/architecture/connected-controls#connecting-the-controls"}},o.a.createElement(a.MDXTag,{name:"inlineCode",components:t,parentName:"a"},"connectControl()")," HOC"),". The \ufe0e",o.a.createElement(a.MDXTag,{name:"inlineCode",components:t,parentName:"p"},"setProperties()")," callback prop is marked with \ufe0e\u21d7 because it is connected for changing the playback state. More info in the architecture description of ",o.a.createElement(a.MDXTag,{name:"a",components:t,parentName:"p",props:{href:"/architecture/overview#arrows-and-boxes"}},"two-way data flow"),"."))}}s.__docgenInfo={description:"",methods:[],displayName:"MDXContent"}},"./src/replay/replay-default.css":function(e,t,n){}}]);
//# sourceMappingURL=components-controls-air-play-button-air-play-button.db0fdb463ccd482b26a4.js.map