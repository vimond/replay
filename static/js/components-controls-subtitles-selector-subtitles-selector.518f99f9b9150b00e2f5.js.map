{"version":3,"sources":["webpack:///./src/replay/components/common.js","webpack:///./src/replay/components/controls/SubtitlesSelector/SubtitlesSelector.js","webpack:///./src/replay/components/controls/SubtitlesSelector/SubtitlesSelector.mdx","webpack:///./src/replay/components/generic/Selector/helpers.js","webpack:///./src/replay/components/generic/Selector/Selector.js","webpack:///./src/replay/components/generic/ToggleButton/ToggleButton.js","webpack:///./src/replay/docs/mdx-helpers/ShowCase.js","webpack:///./src/replay/docs/mdx-helpers/SimpleTable.js","webpack:///./src/replay/docs/props-footnote.md"],"names":["defaultClassNamePrefix","prefixClassNames","prefix","names","sanitizedPrefix","classNameArray","i","length","push","join","isDefined","item","hydrateClassNames","classes","selectClasses","classNames","classNamePrefix","selectedClasses","Array","isArray","filter","getBoundingEventCoordinates","evt","element","domRect","currentTarget","getBoundingClientRect","extractedEvent","touches","changedTouches","x","Math","max","min","pageX","left","width","y","pageY","top","height","getKeyboardShortcutBlocker","keysToBeBlocked","keyboardEvent","indexOf","key","preventDefault","stopPropagation","isDifferent","a","b","Date","getTime","Number","isNaN","isObject","obj","constructor","isShallowEqual","keysA","Object","keys","keysB","deepClone","clone","original","forEach","override","base","overrides","copy","extension","getOwnPropertyNames","formatTimeComponent","integer","separator","emptyIfZero","pad","formatTime","seconds","negativeMark","rounded","round","includedNegativeMark","Infinity","days","floor","daysInSeconds","hours","hoursAndDaysInSeconds","minutes","secs","formatClockTime","date","isValidDate","getHours","getMinutes","getSeconds","getIntervalRunner","method","intervalSeconds","intervalID","start","setInterval","stop","clearInterval","buildId","str","s","buildLabel","label","kind","language","textTrackToItem","track","noTrack","id","data","origin","SubtitlesSelector","React","props","super","this","setProperties","selectedTextTrack","state","noSubtitlesItem","noSubtitlesLabel","render","textTracks","currentTextTrack","toggleContent","items","concat","selectedItem","selectedIndex","itemMapper","className","onSelect","handleSelect","reverseOrder","expandedToggleContent","collapsedToggleContent","displayName","MDXContent","Component","layout","components","name","parentName","__codesandbox","__position","__code","__scope","ShowCase","Type","SimpleTable","Footnote","languag","of","rows","selectItemClasses","selectorItem","selectItemSelectedClasses","selectorItemSelected","SelectorItem","onRef","index","handleClick","defaultItemClassName","isSelected","canReceiveFocus","selectedClassName","tabIndex","undefined","role","aria-selected","ref","handleRef","onClick","onKeyDown","handleKeyDown","onKeyUp","handleKeyUp","focusElement","upwards","isReverseOrder","baseElement","elements","slice","reverse","document","activeElement","j","focus","selectCollapsedClasses","selectorCollapsed","selector","selectExpandedClasses","selectorExpanded","selectItemsContainerClasses","selectorItemsContainer","Selector","toggleElement","isOn","setState","isExpanded","itemElement","focusableItems","itemData","handleItemRef","itemClassName","renderedItems","map","renderSelectorItem","itemsContainerClassNames","toggleButtonClasses","toggleButtonOff","selectorToggle","selectorToggleOff","toggleButtonOn","selectorToggleOn","onMouseLeave","handleMouseLeave","ToggleButton","onToggle","handleToggle","onToggleRef","toggledOffContent","toggledOnContent","useDefaultClassNaming","selectOffClasses","toggleButton","selectOnClasses","toggleClassName","content","aria-pressed","title","value","convertPropsToState","style","justifyContent","tableStyles","padding","tableLayout","boxShadow","borderSpacing","borderColor","borderCollapse","borderStyle","borderRadius","overflowY","fontSize","color","display","theadStyles","background","textAlign","trStyles","orderSpacing","tdStyles","verticalAlign","tdItalicStyles","fontStyle","opacity","tdCodeStyles","fontFamily","whiteSpace","keyBase","row","values","headers","header","formatContent"],"mappings":"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","file":"static/js/components-controls-subtitles-selector-subtitles-selector.ab0f780b.js","sourcesContent":["//@flow\n\ntype Classes = { [string]: ?string };\n\nexport type CommonGenericProps = {\n  classes?: ?Classes,\n  classNamePrefix?: string,\n  className?: string\n};\n\nexport type CommonProps = {\n  classNamePrefix?: string,\n  label?: string\n};\n\nexport type Id = string | number;\n\ntype Coordinates = { x: number, y: number, width: number, height: number };\n\nexport const defaultClassNamePrefix = 'replay-';\n\nexport function prefixClassNames(prefix: ?string, ...names: Array<?string>): string {\n  const sanitizedPrefix = prefix == null ? '' : prefix;\n  const classNameArray = [];\n  for (let i = 0; i < names.length; i++) {\n    // Early optimisation: For loop is more effective than map/filter...\n    if (names[i]) {\n      classNameArray.push(sanitizedPrefix + names[i]);\n    }\n  }\n  return classNameArray.join(' ');\n}\n\n/*export function buildClassNames(useDefaultClassNaming: ?boolean, prefix: ?string, ...names: Array<?string>): string {\n  return useDefaultClassNaming ? prefixClassNames(prefix, ...names) : names[0] || '';\n}*/\n\nconst isDefined = item => item;\n\nexport function hydrateClassNames({\n  classes,\n  selectClasses,\n  classNames,\n  classNamePrefix\n}: {\n  classes: ?Classes,\n  selectClasses: Classes => ?string | ?Array<?string>,\n  classNames?: Array<?string>,\n  classNamePrefix?: string\n}): ?string {\n  if (classes && selectClasses) {\n    const selectedClasses = selectClasses(classes);\n    if (Array.isArray(selectedClasses)) {\n      return selectedClasses.filter(isDefined).join(' ');\n    } else {\n      return selectedClasses;\n    }\n  } else if (classNames) {\n    return prefixClassNames(classNamePrefix, ...classNames);\n  }\n}\n\nexport function getBoundingEventCoordinates(evt: any, element?: HTMLElement): Coordinates {\n  // Difficult to code this with strict typing in a JS-optimal way. Sticking to any for the event.\n  const domRect = (element || evt.currentTarget).getBoundingClientRect();\n  let extractedEvent;\n  if (evt.touches && evt.touches.length > 0) {\n    extractedEvent = evt.touches[0];\n  } else if (evt.changedTouches && evt.changedTouches.length > 0) {\n    extractedEvent = evt.changedTouches[0];\n  } else {\n    extractedEvent = evt;\n  }\n  return {\n    x: Math.max(0, Math.min(extractedEvent.pageX - domRect.left, domRect.width)),\n    y: Math.max(0, Math.min(extractedEvent.pageY - domRect.top, domRect.height)),\n    width: domRect.width,\n    height: domRect.height\n  };\n}\n\nexport function getKeyboardShortcutBlocker(keysToBeBlocked: Array<string>): KeyboardEvent => void {\n  return (keyboardEvent: KeyboardEvent) => {\n    if (keysToBeBlocked.indexOf(keyboardEvent.key) >= 0) {\n      keyboardEvent.preventDefault();\n      keyboardEvent.stopPropagation();\n    }\n  };\n}\n\nexport const isDifferent = (a: any, b: any) => {\n  if (a === b) {\n    return false;\n  }\n  if (a instanceof Date && b instanceof Date && a.getTime() === b.getTime()) {\n    return false;\n  }\n  return !(Number.isNaN(a) && Number.isNaN(b));\n};\n\nexport const isObject = (obj: ?{}) => obj != null && obj.constructor === {}.constructor;\n\nexport const isShallowEqual = (a: any, b: any): boolean => {\n  if (a === b) {\n    return true;\n  } else if (isObject(a) && isObject(b)) {\n    const keysA = Object.keys(a);\n    const keysB = Object.keys(b);\n    if (keysA.length !== keysB.length) {\n      return false;\n    }\n    const differentACount = keysA.filter(key => isDifferent(a[key], b[key])).length;\n    if (differentACount > 0) {\n      return false;\n    }\n    return keysB.filter(key => isDifferent(b[key], a[key])).length === 0;\n  } else if (Array.isArray(a) && Array.isArray(b) && a.length === b.length) {\n    for (let i = a.length; i--; ) {\n      if (a[i] !== b[i]) return false;\n    }\n    return true;\n  } else {\n    // No identical equality\n    return false;\n  }\n};\n\nexport function deepClone(obj: ?{}): {} {\n  if (obj == null) {\n    return {};\n  } else {\n    const clone = {};\n    const original = obj;\n    Object.keys(obj).forEach(key => {\n      if (isObject(original[key])) {\n        clone[key] = deepClone(original[key]);\n      } else {\n        clone[key] = original[key];\n      }\n    });\n    return clone;\n  }\n}\n\nexport function override(base: ?{}, overrides: ?{}): Object {\n  const copy = deepClone(base);\n  if (overrides) {\n    const extension: {} = overrides; // Should be unnecessary!\n    Object.getOwnPropertyNames((extension: {})).forEach(key => {\n      if (isObject(extension[key])) {\n        if (isObject(copy[key])) {\n          copy[key] = override(copy[key], extension[key]);\n        } else {\n          copy[key] = deepClone(extension[key]);\n        }\n      } else {\n        copy[key] = extension[key];\n      }\n    });\n  }\n  return copy;\n}\n\nexport const formatTimeComponent = (\n  integer: number,\n  separator: string = '',\n  emptyIfZero: boolean = false,\n  pad: boolean = true\n) => {\n  return emptyIfZero && integer === 0 ? '' : integer < 10 && pad ? `0${integer}${separator}` : `${integer}${separator}`;\n};\n\nexport const formatTime = (seconds: number, negativeMark: string = '-') => {\n  let rounded = Math.round(seconds);\n  let includedNegativeMark = '';\n  if (typeof seconds !== 'number' || isNaN(seconds) || seconds === Infinity) {\n    rounded = 0;\n  } else if (rounded < 0) {\n    rounded = -rounded;\n    includedNegativeMark = negativeMark;\n  }\n  const days = Math.floor(rounded / 86400);\n  const daysInSeconds = days * 86400;\n  const hours = Math.floor((rounded - daysInSeconds) / 3600);\n  const hoursAndDaysInSeconds = daysInSeconds + hours * 3600;\n  const minutes = Math.floor((rounded - hoursAndDaysInSeconds) / 60);\n  const secs = rounded - hoursAndDaysInSeconds - minutes * 60;\n  return (\n    includedNegativeMark +\n    formatTimeComponent(days, '.', true, false) +\n    formatTimeComponent(hours, ':', days === 0) +\n    formatTimeComponent(minutes, ':', false) +\n    formatTimeComponent(secs)\n  );\n};\n\nexport const formatClockTime = (date: ?Date) => {\n  const isValidDate = date instanceof Date && !isNaN(date.getTime());\n  let hours = 0;\n  let minutes = 0;\n  let seconds = 0;\n  if (isValidDate && date != null) {\n    // Silly construct for flow null check.\n    hours = isValidDate ? date.getHours() : 0;\n    minutes = isValidDate ? date.getMinutes() : 0;\n    seconds = isValidDate ? date.getSeconds() : 0;\n  }\n  return (\n    formatTimeComponent(hours, ':', false) + formatTimeComponent(minutes, ':', false) + formatTimeComponent(seconds)\n  );\n};\n\nexport const getIntervalRunner = (method: () => void, intervalSeconds: number) => {\n  let intervalID: ?IntervalID = null;\n  return {\n    start: () => {\n      if (!intervalID) {\n        intervalID = setInterval(method, intervalSeconds * 1000);\n      }\n    },\n    stop: () => {\n      if (intervalID) {\n        clearInterval(intervalID);\n        intervalID = null;\n      }\n    }\n  };\n};\n","// @flow\nimport * as React from 'react';\nimport Selector from '../../generic/Selector/Selector';\nimport { defaultClassNamePrefix } from '../../common';\nimport type { AvailableTrack } from '../../player/VideoStreamer/types';\nimport type { CommonProps } from '../../common';\nimport type { StreamStateKeysForObservation } from '../../player/PlayerController/ControllerContext';\n\ntype Props = CommonProps & {\n  /** ⇘︎ The list of text tracks available for selection. */\n  textTracks?: Array<AvailableTrack>,\n  /** ⇘ The currently displaying text track. Must be strict equal one of the items in the text track list. Set to null if no subtitles are displayed. */\n  currentTextTrack?: AvailableTrack,\n  /** ⇗ When one item is clicked, this callback is invoked with an object having an selectedTextTrack property with the textTrack object corresponding to the selection. */\n  setProperties?: ({ selectedTextTrack: ?AvailableTrack }) => void,\n  /** The label to use on the selector option for not displaying subtitles. */\n  noSubtitlesLabel: string,\n  /** Element displayed in the control bar for expanding/collapsing the selector items. */\n  toggleContent: React.Node\n};\n\ntype State = {\n  noSubtitlesItem: { noTrack: true, label: string }\n};\n\nconst className = 'subtitles-selector';\n\nconst defaultKind = 'subtitles';\n\nconst buildId = (...str: Array<?string>) => str.filter(s => s).join('.');\n// TODO: Consider injectable label mapper, and also for audio selector and bitrate selector.\nconst buildLabel = ({ label, kind = defaultKind, language = 'unknown' }: AvailableTrack) =>\n  label || (kind !== defaultKind ? `[${language}] ${kind}` : `[${language}]`) || '';\n\nconst textTrackToItem = (track: AvailableTrack | { noTrack: true, label: string }) => {\n  if (track.noTrack) {\n    const label = track.label || '';\n    return {\n      id: 0,\n      label,\n      data: track\n    };\n  } else {\n    return {\n      id: track.id || buildId(track.language, track.kind, track.origin) || track.label,\n      label: buildLabel(track),\n      data: track\n    };\n  }\n};\n\nclass SubtitlesSelector extends React.Component<Props, State> {\n  static defaultProps = {\n    classNamePrefix: defaultClassNamePrefix\n  };\n\n  static streamStateKeysForObservation: StreamStateKeysForObservation = ['textTracks', 'currentTextTrack'];\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      noSubtitlesItem: { noTrack: true, label: this.props.noSubtitlesLabel }\n    };\n  }\n\n  handleSelect = (item: any) => {\n    if (this.props.setProperties) {\n      if (item.noTrack) {\n        this.props.setProperties({ selectedTextTrack: null });\n      } else {\n        this.props.setProperties({ selectedTextTrack: item });\n      }\n    }\n  };\n\n  render() {\n    const { textTracks, currentTextTrack, label, toggleContent, classNamePrefix } = this.props;\n    if (Array.isArray(textTracks) && textTracks.length > 0) {\n      // TODO: Consider optimization, memoizing the array and all props involved in rendering.\n      const items = [this.state.noSubtitlesItem].concat(textTracks);\n      let selectedItem = this.state.noSubtitlesItem;\n      if (currentTextTrack) {\n        const selectedIndex = textTracks.indexOf(currentTextTrack) + 1; // Nasty detail. Including \"no subtitles\" when counting.\n        if (selectedIndex > 0) {\n          selectedItem = items[selectedIndex];\n        }\n      }\n      return (\n        <Selector\n          items={items}\n          itemMapper={textTrackToItem}\n          classNamePrefix={classNamePrefix}\n          className={className}\n          selectedItem={selectedItem}\n          label={label}\n          onSelect={this.handleSelect}\n          reverseOrder={true}\n          expandedToggleContent={toggleContent}\n          collapsedToggleContent={toggleContent}\n        />\n      );\n    } else {\n      return null;\n    }\n  }\n}\n\nSubtitlesSelector.displayName = 'SubtitlesSelector';\nexport default SubtitlesSelector;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  import { Playground, PropsTable } from 'docz';\nimport SubtitlesSelector from './SubtitlesSelector';\nimport ShowCase from '../../../docs/mdx-helpers/ShowCase';\nimport { Type } from 'react-feather';\nimport SimpleTable from '../../../docs/mdx-helpers/SimpleTable';\nimport Footnote from '../../../docs/props-footnote.md';\n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}>\n<MDXTag name=\"h1\" components={components} props={{\"id\":\"subtitlesselector\"}}>{`SubtitlesSelector`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Control bar widget for controlling subtitle display and language selections.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"summary\"}}>{`Summary`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The subtitles selector lists the stream's available text tracks, and controls what track to display, if any. The control is only rendered if there are one or more text tracks.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The subtitles selector uses the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<Selector />`}</MDXTag>{` generic component, and is implemented similar patterns to `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<AudioSelector />`}</MDXTag>{` and partly `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`<QualitySelector />`}</MDXTag>{`. Upon clicking on one selector item representing a track, it invokes `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties({ selectedTextTrack: track })`}</MDXTag>{` where `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`track`}</MDXTag>{` is the clicked selector item. The selector also contains one item for turning off display of subtitles. This item must be given a label through the `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`noSubtitlesLabel`}</MDXTag>{` prop. If the \"No subtitles\" item is selected, `}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties({ selectedTextTrack: null })`}</MDXTag>{` is invoked.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"example\"}}>{`Example`}</MDXTag>\n<Playground __codesandbox={`undefined`} __position={0} __code={'() => {\\n  const textTracks = [\\n    { label: \\'Finnish\\', language: \\'fi\\', kind: \\'subtitles\\' },\\n    { label: \\'German\\', language: \\'de\\', kind: \\'subtitles\\' },\\n    { label: \\'Spanish\\', languag: \\'es\\', kind: \\'subtitles\\' },\\n  ]\\n  return (\\n    <ShowCase\\n      height=\\\"90px\\\"\\n      render={({ setProperties, currentTextTrack }) => (\\n        <SubtitlesSelector\\n          setProperties={setProperties}\\n          currentTextTrack={currentTextTrack}\\n          noSubtitlesLabel=\\\"No subtitles\\\"\\n          toggleContent={<Type />}\\n          textTracks={textTracks}\\n        />\\n      )}\\n    />\\n  )\\n}'} __scope={{props: this ? this.props : props,SubtitlesSelector,ShowCase,Type,SimpleTable,Footnote}}>\n  {() => {\n    const textTracks = [\n        { label: 'Finnish' , language: 'fi', kind: 'subtitles' }, \n        { label: 'German' , language: 'de', kind: 'subtitles' },\n        { label: 'Spanish', languag: 'es', kind: 'subtitles' }\n      ];\n    return (\n      <ShowCase height=\"90px\" render={({ setProperties, currentTextTrack }) => (\n        <SubtitlesSelector \n          setProperties={setProperties}\n          currentTextTrack={currentTextTrack}\n          noSubtitlesLabel=\"No subtitles\"\n          toggleContent={<Type/>}\n          textTracks={textTracks}\n        />\n      )}/>\n    );\n  }}\n</Playground>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"props\"}}>{`Props`}</MDXTag>\n<PropsTable of={SubtitlesSelector}/>\n<Footnote/>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"component-dom-with-class-names\"}}>{`Component DOM with class names`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Please read the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/custom-replay/skins-styles\"}}>{`general principles`}</MDXTag>{` for Replay class names and styling.`}</MDXTag>\n<SimpleTable rows={[{ \n  'Element': 'div',\n  'Class name': 'subtitles-selector',\n  'Generic class name': 'selector',\n  'States': 'collapsed, expanded',\n  'Parent': ''\n},{\n  'Element': 'div',\n  'Class name': 'selector-toggle',\n  'Generic class name': 'toggle-button',\n  'States': 'toggled-on, toggled-off',\n  'Parent': '.subtitles-selector'\n},{\n  'Element': 'div',\n  'Class name': '',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.selector-toggle'\n},{\n  'Element': 'div',\n  'Class name': 'selector-items',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.subtitles-selector'\n },{\n  'Element': 'div (0..n)',\n  'Class name': 'selector-item',\n  'Generic class name': '',\n  'States': 'selected',\n  'Parent': '.selector-items'\n},{\n  'Element': 'div (0..n)',\n  'Class name': '',\n  'Generic class name': '',\n  'States': '',\n  'Parent': '.selector-item'\n }]}/>\n           </MDXTag>\n  }\n}\n  ","// @flow\nimport * as React from 'react';\nimport { getKeyboardShortcutBlocker, hydrateClassNames } from '../../common';\nimport type { CommonGenericProps, Id } from '../../common';\n\nexport type ItemData = {\n  label: string,\n  id?: Id,\n  data?: any\n};\n\ntype SelectorItemProps = CommonGenericProps & {\n  item: ItemData,\n  index: number,\n  isSelected: boolean,\n  canReceiveFocus: boolean,\n  defaultItemClassName: string,\n  selectedClassName: string,\n  onSelect?: any => void,\n  onRef: (?HTMLElement, number) => void\n};\n\nconst selectItemClasses = classes => classes.selectorItem;\nconst selectItemSelectedClasses = classes => classes.selectorItemSelected || classes.selectorItem;\n\nexport class SelectorItem extends React.Component<SelectorItemProps> {\n  handleRef = (element: ?HTMLElement) => {\n    this.props.onRef(element, this.props.index);\n  };\n\n  handleClick = () => this.props.onSelect && this.props.onSelect(this.props.item.data);\n\n  handleKeyDown = getKeyboardShortcutBlocker(['Enter', ' ']);\n\n  handleKeyUp = (keyboardEvent: KeyboardEvent) => {\n    if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n      keyboardEvent.preventDefault();\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const {\n      className,\n      classNamePrefix,\n      classes,\n      defaultItemClassName,\n      item,\n      isSelected,\n      canReceiveFocus,\n      selectedClassName\n    } = this.props;\n    const { label } = item;\n    const classNames = hydrateClassNames({\n      classes,\n      classNamePrefix,\n      selectClasses: isSelected ? selectItemSelectedClasses : selectItemClasses,\n      classNames: [className, defaultItemClassName, isSelected ? selectedClassName : null]\n    });\n    const tabIndex = canReceiveFocus ? 0 : undefined;\n    return (\n      <div\n        role=\"option\"\n        aria-selected={isSelected}\n        className={classNames}\n        ref={this.handleRef}\n        onClick={this.handleClick}\n        onKeyDown={this.handleKeyDown}\n        onKeyUp={this.handleKeyUp}\n        tabIndex={tabIndex}>\n        <div tabIndex={-1}>{label}</div>\n      </div>\n    );\n  }\n}\n\nexport function focusElement(\n  upwards: boolean,\n  isReverseOrder: boolean,\n  items: Array<?HTMLElement>,\n  baseElement: ?HTMLElement\n) {\n  const elements = (isReverseOrder ? items.slice(0).reverse() : items).concat(baseElement);\n  for (let i = 0; i < elements.length; i++) {\n    if (elements[i] === document.activeElement) {\n      if (upwards) {\n        if (i > 0) {\n          for (let j = i - 1; j >= 0; j--) {\n            const element = elements[j];\n            if (element) {\n              element.focus();\n              return element;\n            }\n          }\n        }\n      } else {\n        if (i < elements.length - 1) {\n          for (let j = i + 1; j < elements.length; j++) {\n            const element = elements[j];\n            if (element) {\n              element.focus();\n              return element;\n            }\n          }\n        }\n      }\n    }\n  }\n}\n","// @flow\nimport * as React from 'react';\nimport { type CommonGenericProps, hydrateClassNames } from '../../common';\nimport ToggleButton from '../ToggleButton/ToggleButton';\nimport { focusElement, SelectorItem } from './helpers';\nimport type { ItemData } from './helpers';\n\ntype Props = CommonGenericProps & {\n  items: Array<any>,\n  selectedItem?: any,\n  reverseOrder?: boolean,\n  itemClassName?: string,\n  collapsedToggleContent?: React.Node,\n  expandedToggleContent?: React.Node,\n  label?: string,\n  itemMapper: any => ItemData,\n  onSelect?: any => void\n};\n\ntype SelectorState = {\n  isExpanded: boolean\n};\n\nconst defaultSelectorClassName = 'selector';\nconst expandToggleClassName = 'selector-toggle';\nconst selectorItemsClassName = 'selector-items';\nconst expandedClassName = 'expanded';\nconst collapsedClassName = 'collapsed';\nconst defaultItemClassName = 'selector-item';\nconst selectedClassName = 'selected';\n\nconst selectCollapsedClasses = classes => classes.selectorCollapsed || classes.selector;\nconst selectExpandedClasses = classes => classes.selectorExpanded || classes.selector;\nconst selectItemsContainerClasses = classes => classes.selectorItemsContainer;\n\nclass Selector extends React.Component<Props, SelectorState> {\n  static defaultProps = {\n    useDefaultClassNaming: true\n  };\n\n  constructor(props: Props) {\n    super(props);\n    this.state = {\n      isExpanded: false\n    };\n  }\n\n  focusableItems: Array<?HTMLElement> = [];\n  toggleElement: ?HTMLElement = null;\n\n  onToggleRef = (toggleElement: ?HTMLElement) => {\n    this.toggleElement = toggleElement;\n  };\n\n  handleToggle = (isOn: boolean) => this.setState({ isExpanded: isOn });\n\n  handleItemRef = (itemElement: ?HTMLElement, index: number) => {\n    this.focusableItems[index] = itemElement;\n  };\n\n  renderSelectorItem = (item: any, index: number) => {\n    const itemData = this.props.itemMapper(item);\n    return (\n      <SelectorItem\n        key={itemData.id}\n        item={itemData}\n        index={index}\n        onSelect={this.props.onSelect}\n        onRef={this.handleItemRef}\n        isSelected={item === this.props.selectedItem}\n        canReceiveFocus={this.state.isExpanded}\n        selectedClassName={selectedClassName}\n        defaultItemClassName={defaultItemClassName}\n        className={this.props.itemClassName}\n        classes={this.props.classes}\n        classNamePrefix={this.props.classNamePrefix}\n      />\n    );\n  };\n\n  handleKeyDown = (keyboardEvent: KeyboardEvent) => {\n    switch (keyboardEvent.key) {\n      case 'ArrowUp':\n      case 'Up':\n        keyboardEvent.preventDefault();\n        return;\n      case 'ArrowDown':\n      case 'Down':\n        if (this.state.isExpanded) {\n          keyboardEvent.preventDefault();\n        }\n        return;\n      default:\n        return;\n    }\n  };\n\n  handleKeyUp = (keyboardEvent: KeyboardEvent) => {\n    if (this.state.isExpanded) {\n      if (keyboardEvent.key === 'ArrowUp' || keyboardEvent.key === 'Up') {\n        keyboardEvent.preventDefault();\n        focusElement(true, this.props.reverseOrder || false, this.focusableItems, this.toggleElement);\n      }\n      if (keyboardEvent.key === 'ArrowDown' || keyboardEvent.key === 'Down') {\n        keyboardEvent.preventDefault();\n        const focusedElement = focusElement(\n          false,\n          this.props.reverseOrder || false,\n          this.focusableItems,\n          this.toggleElement\n        );\n        if (focusedElement === this.toggleElement) {\n          this.setState({ isExpanded: false });\n        }\n      }\n    } else {\n      if (keyboardEvent.key === 'ArrowUp' || keyboardEvent.key === 'Up') {\n        keyboardEvent.preventDefault();\n        this.setState({ isExpanded: true });\n      }\n    }\n  };\n\n  handleMouseLeave = () => {\n    this.setState({ isExpanded: false });\n  };\n\n  render() {\n    const {\n      className,\n      classNamePrefix,\n      classes,\n      items,\n      collapsedToggleContent,\n      expandedToggleContent,\n      reverseOrder,\n      label\n    } = this.props;\n    const renderedItems = items\n      ? reverseOrder\n        ? items.map(this.renderSelectorItem).reverse()\n        : items.map(this.renderSelectorItem)\n      : null;\n    const classNames = hydrateClassNames({\n      classes,\n      classNamePrefix,\n      selectClasses: this.state.isExpanded ? selectExpandedClasses : selectCollapsedClasses,\n      classNames: [className, defaultSelectorClassName, this.state.isExpanded ? expandedClassName : collapsedClassName]\n    });\n    const itemsContainerClassNames = hydrateClassNames({\n      classes,\n      selectClasses: selectItemsContainerClasses,\n      classNamePrefix,\n      classNames: [selectorItemsClassName]\n    });\n    const toggleButtonClasses = classes\n      ? {\n          toggleButtonOff: classes.selectorToggle || classes.selectorToggleOff,\n          toggleButtonOn: classes.selectorToggleOn\n        }\n      : null;\n\n    return (\n      <div\n        className={classNames}\n        onKeyUp={this.handleKeyUp}\n        onKeyDown={this.handleKeyDown}\n        onMouseLeave={this.handleMouseLeave}>\n        <ToggleButton\n          isOn={this.state.isExpanded}\n          className={expandToggleClassName}\n          classNamePrefix={classNamePrefix}\n          classes={toggleButtonClasses}\n          label={label}\n          onToggle={this.handleToggle}\n          onRef={this.onToggleRef}\n          toggledOffContent={collapsedToggleContent}\n          toggledOnContent={expandedToggleContent}\n        />\n        <div role=\"listbox\" className={itemsContainerClassNames}>\n          {renderedItems}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Selector;\n","// @flow\nimport * as React from 'react';\nimport { type CommonGenericProps, getKeyboardShortcutBlocker, hydrateClassNames } from '../../common';\n\ntype Props = CommonGenericProps & {\n  /** Set to true if the button should be in the toggled on mode. */\n  isOn?: boolean,\n  /** The label will appear in the title attribute of the root DOM element of the toggle button. */\n  label?: string,\n  /** The button content to be displayed when the button is toggled off. */\n  toggledOffContent?: React.Node,\n  /** The button content to be displayed when the button is toggled on. */\n  toggledOnContent?: React.Node,\n  /** A callback method that will be invoked when the button is clicked and the value toggled. If the button has been toggled on, true is passed to the callback. */\n  onToggle?: boolean => void,\n  /** A callback method invoked with the rendered button element, for focus purposes. */\n  onRef?: (?HTMLElement) => void\n};\n\nconst baseClassName = 'toggle-button';\nconst offClassName = 'toggled-off';\nconst onClassName = 'toggled-on';\n\nconst selectOffClasses = classes => classes.toggleButtonOff || classes.toggleButton;\nconst selectOnClasses = classes => classes.toggleButtonOn || classes.toggleButton;\n\n/**\n * Renders a button with two states - toggled on and off. When clicked, it reports back the opposite state.\n */\nclass ToggleButton extends React.Component<Props> {\n  static defaultProps = {\n    useDefaultClassNaming: true\n  };\n\n  handleClick = () => this.props.onToggle && this.props.onToggle(!this.props.isOn);\n\n  handleKeyDown = getKeyboardShortcutBlocker(['Enter', ' ']);\n\n  handleKeyUp = (keyboardEvent: KeyboardEvent) => {\n    if (keyboardEvent.key === 'Enter' || keyboardEvent.key === ' ') {\n      keyboardEvent.preventDefault();\n      this.handleClick();\n    }\n  };\n\n  render() {\n    const { isOn, label, className, classNamePrefix, toggledOnContent, toggledOffContent, onRef, classes } = this.props;\n    const toggleClassName = isOn ? onClassName : offClassName;\n    const classNames = hydrateClassNames({\n      classes,\n      selectClasses: isOn ? selectOnClasses : selectOffClasses,\n      classNamePrefix,\n      classNames: [className, baseClassName, toggleClassName]\n    });\n    const content = isOn ? toggledOnContent : toggledOffContent;\n    return (\n      <div\n        role=\"button\"\n        aria-pressed={isOn}\n        title={label}\n        onClick={this.handleClick}\n        onKeyUp={this.handleKeyUp}\n        onKeyDown={this.handleKeyDown}\n        ref={onRef}\n        className={classNames}\n        tabIndex={0}>\n        <div tabIndex={-1}>{content}</div>\n      </div>\n    );\n  }\n}\n\nexport default ToggleButton;\n","// @flow\nimport * as React from 'react';\nimport type { PlaybackProps, VideoStreamState } from '../../components/player/VideoStreamer/types';\nimport '../../replay-default.css';\n\ntype Props = {\n  render: (VideoStreamState & { setProperties: PlaybackProps => void }) => React.Node,\n  height?: string\n};\n\nconst convertPropsToState = (props: PlaybackProps): VideoStreamState => {\n  const state: VideoStreamState = {};\n  Object.keys(props).forEach(key => {\n    // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n    let value = props[key];\n    switch (key) {\n      case 'selectedAudioTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentAudioTrack'] = value;\n        break;\n      case 'selectedTextTrack':\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state['currentTextTrack'] = value;\n        break;\n      default:\n        // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState.\n        state[key] = value;\n    }\n  });\n  return state;\n};\n\nclass ShowCase extends React.Component<Props, VideoStreamState> {\n  constructor(props: Props) {\n    super(props);\n    this.state = {};\n  }\n\n  // $FlowFixMe Cheating by mixing PlaybackProps and VideoStreamState. Should work well for most of the props.\n  setProperties = (props: PlaybackProps) => this.setState(convertPropsToState(props));\n\n  render() {\n    const { setProperties, state } = this;\n    const { render, height } = this.props;\n    const style = height ? { width: '100%', height } : { width: '100%' };\n    return (\n      <div>\n        <div style={style} />\n        <div className=\"replay-controls-bar\" style={{ justifyContent: 'center' }}>\n          {render({ ...state, setProperties })}\n        </div>\n      </div>\n    );\n  }\n}\nexport default ShowCase;\n","// @flow\nimport * as React from 'react';\n\ntype Props = {\n  rows?: Array<{ [string]: string }>\n};\n\nconst tableStyles = {\n  padding: 0,\n  tableLayout: 'auto',\n  boxShadow: '0 0 0 1px #CED4DE',\n  borderSpacing: 0,\n  borderColor: 'gray',\n  borderCollapse: 'collapse',\n  borderStyle: 'hidden',\n  borderRadius: '4px',\n  overflowY: 'hidden',\n  fontSize: '14px',\n  color: '#13161F',\n  width: '100%',\n  display: 'table'\n};\n\nconst theadStyles = {\n  color: '#7D899C',\n  background: '#EEF1F5',\n  textAlign: 'left',\n  fontSize: '14px',\n  borderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst trStyles = {\n  orderSpacing: 0,\n  borderCollapse: 'collapse'\n};\n\nconst tdStyles = {\n  padding: '20px',\n  verticalAlign: 'top'\n};\n\nconst tdItalicStyles = {\n  ...tdStyles,\n  fontStyle: 'italic',\n  opacity: 0.5\n};\n\nconst tdCodeStyles = {\n  ...tdStyles,\n  fontFamily: '\"Source Code Pro\",monospace',\n  whiteSpace: 'nowrap'\n};\n\nconst applyStyles = content => {\n  if (content === '') {\n    return tdItalicStyles;\n  } else {\n    return tdCodeStyles;\n  }\n};\n\nconst formatContent = content => {\n  if (content === '') {\n    return 'none';\n  } else {\n    return content;\n  }\n};\n\nconst SimpleTable = ({ rows }: Props) => {\n  const keyBase = rows ? rows.map(row => (Object.values(row): any).join('-')).join('-') : '';\n  if (rows && rows.length) {\n    const headers = Object.keys(rows[0]);\n    return (\n      <table style={tableStyles}>\n        <thead style={theadStyles}>\n          <tr style={trStyles}>\n            {headers.map(header => (\n              <th key={'header-' + header} style={tdStyles}>\n                {header}\n              </th>\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {rows.map((row, i) => (\n            <tr key={keyBase + '-row-' + i} style={trStyles}>\n              {(Object.values(row): any).map((value, j) => (\n                <td key={keyBase + '-cell-' + i + '-' + j} style={applyStyles(value)}>\n                  {formatContent(value)}\n                </td>\n              ))}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  }\n};\n\nexport default SimpleTable;\n","\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"p\" components={components}>{`Props marked with ⇘ are updated with the video streamer's `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/reference/observable-stream-state\"}}>{`state property`}</MDXTag>{` having the same name, when connected by the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/connected-controls#connecting-the-controls\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`connectControl()`}</MDXTag>{` HOC`}</MDXTag>{`. The ︎`}<MDXTag name=\"inlineCode\" components={components} parentName=\"p\">{`setProperties()`}</MDXTag>{` callback prop is marked with ︎⇗ because it is connected for changing the playback state. More info in the architecture description of `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/architecture/overview#arrows-and-boxes\"}}>{`two-way data flow`}</MDXTag>{`.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}