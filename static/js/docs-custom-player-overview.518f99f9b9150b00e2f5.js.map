{"version":3,"sources":["webpack:///./src/replay/docs/custom-player/overview.mdx"],"names":["MDXContent","React","Component","constructor","props","super","this","layout","render","components","name","parentName"],"mappings":"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","file":"static/js/docs-custom-player-overview.2f9a756c.js","sourcesContent":["\n  import React from 'react'\n  import { MDXTag } from '@mdx-js/tag'\n  \n\nconst layoutProps = {\n  \n};\nexport default class MDXContent extends React.Component {\n  constructor(props) {\n    super(props)\n    this.layout = null\n  }\n  render() {\n    const { components, ...props } = this.props\n\n    return <MDXTag\n             name=\"wrapper\"\n             \n             components={components}><MDXTag name=\"h1\" components={components} props={{\"id\":\"overview\"}}>{`Overview`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`Besides what can be achieved through `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/custom-replay/configuration\"}}>{`configuration overrides`}</MDXTag>{` or `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/custom-replay/skins-styles\"}}>{`CSS rules (skinning, layout)`}</MDXTag>{`, some approaches exist for creating a custom Replay player component.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"strategies-for-customisation\"}}>{`Strategies for customisation`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"adding-custom-features-in-container-components-wrapping-replay\"}}>{`Adding custom features in container components wrapping Replay`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`In some cases, it is simpler to wrap extra features around the default Replay player component. For instance integrating with an online video service's REST API, or adding analytics, might be a concern that can be kept in a container component consuming the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"/replay/api\"}}>{`Replay API`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"replacing-text-graphics-controlsplayer-ui-through-the-player-composer\"}}>{`Replacing text, graphics, controls/player UI through the player composer`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`A full player can be composed through the function `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/vimond/replay/blob/master/src/replay/playerComposer.js#L44\"}}><MDXTag name=\"inlineCode\" components={components} parentName=\"a\">{`composePlayer()`}</MDXTag></MDXTag>{`. This takes a render method for a player UI, a set of UI strings, and a set of graphics/icons (typically SVG), and produces a React component that can be distributed/consumed separately as a custom player.`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The UI render method specifies the full DOM tree for the player controls, overlays, and UI containment. A typical strategy would be to copy the `}<MDXTag name=\"a\" components={components} parentName=\"p\" props={{\"href\":\"https://github.com/vimond/replay/blob/master/src/replay/default-player/playerUI.js#L69-L107\"}}>{`default render method`}</MDXTag>{` and add, remove, or replace some of its components.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"build-a-separate-player-picking-components-and-modules-independently\"}}>{`Build a separate player picking components and modules independently`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`After familiarising oneself with the different components included the full player, it is of course possible to refer these individually and compose a new player.`}</MDXTag>\n<MDXTag name=\"h3\" components={components} props={{\"id\":\"forking-the-github-repo-and-modify-the-default-player\"}}>{`Forking the GitHub repo and modify the default player`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`This might be an option if the architecture and patterns don't match the requirements for customisation.`}</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"the-anatomy-of-replay\"}}>{`The anatomy of Replay`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`These modules, components, and concepts are essential to the Replay architecture.`}</MDXTag>\n<MDXTag name=\"ul\" components={components}>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/blob/master/src/replay/default-player/Replay.js\"}}>{`main player component`}</MDXTag>{`, created from the playerComposer. A custom player means a new main player component.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/blob/master/src/replay/components/player/PlayerController/PlayerController.js\"}}>{`player controller`}</MDXTag>{`. This is reused when creating a new, custom player. `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"/architecture/player-controller\"}}>{`More about the PlayerController`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/blob/master/src/replay/default-player/playerUI.js\"}}>{`player UI`}</MDXTag>{` with element tree, `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/blob/master/src/replay/default-player/default-skin/graphics.js\"}}>{`graphics`}</MDXTag>{`, and `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/blob/master/src/replay/default-player/strings.js\"}}>{`strings`}</MDXTag>{`. One or all of these might be reused or replaced when creating a custom player.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/tree/master/src/replay/components/player/containment-helpers\"}}>{`Containment components`}</MDXTag>{` for several overall concerns. In the default player UI, they are gathered in one component, the `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/blob/master/src/replay/components/player/PlayerUIContainer/PlayerUIContainer.js\"}}>{`PlayerUIContainer`}</MDXTag>{`. Might be reused in a custom UI.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\"><MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/tree/master/src/replay/components/controls\"}}>{`Player controls`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`The `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/blob/master/src/replay/components/player/PlayerController/connectControl.js#L30\"}}>{`connectControl`}</MDXTag>{` higher-order-component, wrapping all controls/components relating to the playback/video streamer so that they can `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"/architecture/connected-controls#connecting-the-controls\"}}>{`comsume and control the playback state`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`A selection of one `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/tree/master/src/replay/components/player/VideoStreamer\"}}>{`video streamer`}</MDXTag>{` according to streaming requirements, or the `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/blob/master/src/replay/components/player/VideoStreamer/CompoundVideoStreamer/CompoundVideoStreamer.js\"}}>{`CompoundVideoStreamer`}</MDXTag>{` `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"/advanced-playback/adaptive-streaming#enabling-playback-for-multiple-streaming-technologies-based-on-stream-technology-resolution\"}}>{`auto-detecting which of them`}</MDXTag>{` to be used. With the default Replay player, which one to be used is specified when inserting the Replay component in an app. Custom players might specify one of them directly.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`A `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/blob/master/src/replay/components/player/PlayerController/connectControl.js#L103\"}}>{`higher-order component for the video streamer`}</MDXTag>{`, connecting it to the PlayerController, making it controllable.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Some special components: `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/blob/master/src/replay/components/player/RenderIfEnabled.js\"}}>{`RenderIfEnabled`}</MDXTag>{`, `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/blob/master/src/replay/components/player/settings-helpers/PreferredSettingsApplicator.js\"}}>{`PreferredSettingsApplicator`}</MDXTag>{`.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`Configuration. A custom player can replace the `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/blob/master/src/replay/default-player/baseConfiguration.js\"}}>{`base configuration`}</MDXTag>{`. Configuration `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"http://localhost:3000/#/custom-replay/configuration\"}}>{`overrides can be specified`}</MDXTag>{` when inserting Replay.`}</MDXTag>\n<MDXTag name=\"li\" components={components} parentName=\"ul\">{`CSS. The `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"https://github.com/vimond/replay/blob/master/src/replay/default-player/default-skin/index.css\"}}>{`default skin`}</MDXTag>{` can be replaced or `}<MDXTag name=\"a\" components={components} parentName=\"li\" props={{\"href\":\"/custom-replay/skins-styles\"}}>{`rules can be overridden`}</MDXTag>{`.`}</MDXTag>\n</MDXTag>\n<MDXTag name=\"h2\" components={components} props={{\"id\":\"custom-video-streamers\"}}>{`Custom video streamers`}</MDXTag>\n<MDXTag name=\"p\" components={components}>{`The purpose of creating a custom video streamer would be wrapping other streaming libraries or \"headless\" players into a React component, exposing the same API as those included in the Replay npm package. There is currently no specific documentation on doing this.`}</MDXTag>\n           </MDXTag>\n  }\n}\n  "],"sourceRoot":""}